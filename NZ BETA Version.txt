-- Name of the admin/s
admins = {"Zeroo#7497", "Omarsdpie#0633"}
mods = {}

gameStarted = false
mainModes = {teams = false, elimination = false, solo = false}
mode = "Racing"

autoJoin = true

amountOfTeams = 2
score = 15
respawn = false

team1 = {}
team2 = {}
team3 = {}
team4 = {}

point1 = 0
point2 = 0
point3 = 0
point4 = 0

ignoredTexts = {999, 998, 997}
showInfoPlayers = {}

-- Maps
-- p1Maps = {3186667, 5000099, 5339729, 7445961, 2917535, 2977431, 2005722, 3659613, 4318967, 1513031, 3661838, 5775860, 4203014, 1611752, 2218643, 385840, 1705452, 3734905, 2852366, 5149469, 5514161, 5522156, 3868463, 3746500, 1602910, 3018949, 3558216, 7332438, 7345446, 7271680, 7271427, 7250826, 7251952, 7235639, 2686505, 2836263, 2926504, 1587408, 2334110, 6915216, 5473030, 6649653, 1756843, 1593939, 3677765, 7097287, 1799933, 3256453, 3394477, 1949959, 4061041, 5492101, 1287222, 4076419, 3681952, 3656379, 349609, 1337717, 1646580, 1897442, 1897442, 6730235, 1347672, 2014026, 3838452, 3438340, 895735, 3099948, 1888550, 2282320, 914992, 339904, 2674591, 2300295, 2572599, 1532360, 1877091, 1427984, 1611663, 967177, 2791383, 2437987, 4465627, 1658156, 3077528, 3701233, 1939255, 1094544, 5067492.544145, 2433512, 6937031, 3675438, 7009481, 6974129, 3903481, 1717664, 2965755, 5173280, 3046622, 1844404, 2319756, 1921105, 235863, 481141, 3710878, 3745348, 1551411, 599339, 1132841, 3186738, 1445806, 2950316, 1999433, 7588217, 7588218, 7588221, 7588222, 7588224, 7588225, 7588229, 7588230, 7588233, 7588235, 7588238, 3517551, 7588239, 7588240, 7588243, 7588244, 7588245, 7588246, 7588249, 7588251, 7588253, 7588256, 7588257, 7586454, 4564380, 1709079, 1463576, 2473784, 1990585, 4225415, 3534755, 1529753, 6568183, 3964168, 4465679, 5830619, 1636847, 3084024, 2978758, 2207242, 2828225, 1430257, 1611752, 5083570, 1503669, 3658619, 3712466, 2156325, 2713762, 7301894, 912490, 3637190, 3690789, 1469911, 5086164, 3702120, 721910, 2093306, 3668632, 3891989, 3865829, 1807161, 2681705, 2013606, 1220037, 7586576, 7586577, 7586578, 7586579, 7586581, 7586582, 7586583, 7586584, 7586585, 7586587, 7586589, 7586590, 7586591, 7586592, 7586593, 7586594, 7586595, 3610554, 7586596, 7586597, 7586598, 7586600, 7586601, 7586602, 3089485, 7586603, 2163742, 1053539, 1721251, 5478906, 6205970, 3156745, 4348352, 3241835, 3326440, 1569481, 3636571, 2986279, 1643776, 3837289, 5431781, 6752042, 2418253, 2416543, 5160713, 3358124, 411687, 1712441, 193187, 2877165, 1608238, 1819776, 3480598, 2626804, 3581991, 3898426, 2481042, 3181008, 4182202, 5611222, 2100416, 2816064, 2543452, 3932685, 5105940, 389768, 5395761, 3697752, 1967351, 6830525, 3896856, 2705995, 3489333, 5484871, 2501538, 5313078, 1118306, 4818087, 3428934, 3757278, 5523199, 1944889, 1519256, 2894515, 3150084, 1468561, 5499302, 4900101, 3570936, 7585875, 7585876, 7585877, 7585879, 7585888, 7585889, 7585892, 7585893, 7585896, 7585897, 7585898, 7585899, 7585900, 3520878, 7585901, 7585903, 7585904, 7585906, 193187, 7585907, 7585908, 7585911, 7585912, 6733104, 521756, 2785571, 7243656, 2504433, 268985, 4697282, 2857448, 2457864, 1387242, 2983538, 1746823, 6872493, 3851834, 3143538, 468972, 5814223, 3841284, 3630979, 3216342, 2774931, 1040236, 677608, 895971, 3564891, 3676523, 2159625, 3697872, 6121939, 3806103, 3946237, 5539855, 1817776, 2185227, 2445318, 2973285, 6203577, 1606904, 3190335, 6103100, 1590935, 520308, 2154166, 6202855.1761416, 2767238, 3539557, 531393, 1537810, 7521287, 3803640, 3705380, 5000056, 1449651, 1666383, 3743515, 5647530, 1779582, 2962094, 3549002, 7259687, 1699725, 1451996, 1610004, 1338610, 296361, 1548446, 3023500, 6304005, 4380537, 7074890, 3520951, 1652941, 3755613, 4009415, 401705, 2237427, 6201167, 2784397, 5255657, 533946, 3015348, 4234518, 3387926, 1808440, 852036, 4271527, 3661778, 1580042, 2880295, 1616692, 2413286, 3988481, 2583328, 3221567, 1453388, 2972456, 5017009, 3663231, 3491935, 3478705, 1891199, 6140452, 6498002, 1706451, 3777243, 1691451, 3685069, 1964070, 5070340, 1972853, 2178289, 1418353, 3849085, 4298073, 2211530, 1845355, 6109280, 2035594, 7583983, 1999538, 733188, 7583985, 1407496, 885790, 3717973, 3906543, 5948551, 5976869, 2452276, 6070666, 1487531, 3026533, 1975642, 6714712, 3217173, 542206, 2913914, 5656820, 1769722, 1780844, 7227763, 7584185, 7584186, 7584187, 7584189, 7584190, 2668543, 7584191, 7584192, 7584193, 7584194, 7584195, 5707667, 7584197, 7584198, 7584201, 7584202, 7584204, 1840109, 3035430, 3641597, 5723425, 716454, 1748936, 2698747, 2024218, 3204335, 2833702, 505805, 2048050, 3696199, 3089894, 1828315, 3069262, 3750609, 2731707, 3729330, 1794589, 2017255, 7491603, 4640565, 4055165, 6840620, 6965421, 3164541, 6965421, 3685464, 2054943, 365315, 5813469, 1033390, 7054190, 1124859, 3641873, 3661173, 1473836, 2431444, 3503305, 5737012, 2423265, 1705725, 1949215, 1589402, 2476398, 5710452, 5919033, 2879902, 3497217, 6571252, 3433197, 6104868, 6726790, 1380450, 2558489, 3721136, 1650589, 3647084, 3624946, 6557245, 3912825, 5166234, 3029129, 1477421, 1799351, 1737233, 2038475, 1446502, 2012857, 1958837, 5432386, 6042206, 243962, 5070428, 2198167, 2749103, 1369255, 2557752, 5188867, 3731931, 3238202, 1439286, 5176687, 1446952, 1142162, 3328963, 721229, 6050971, 3531249, 3756184, 1532940, 6660659, 3184847, 1971197, 3832344, 5293621, 2239095, 7581422, 3379444, 7581425, 5402499, 7581426, 7581430, 7581431, 7581433, 857969, 7090005, 7581435, 7581437, 7581441, 4702472, 7581442, 7581443, 7581444, 7581445, 7581446, 7581447, 7581448, 7581449, 7581450, 5213306, 7581451, 7560419, 7581453, 7581456, 7581457, 7581458, 5746152, 7227007, 4864351, 3060011, 5200910, 3257930, 2398407, 1544861, 3144670, 1644081, 2006666, 1580374, 5796038, 2815472, 5681686, 3100650, 2692126, 1741073, 2102814, 3710363, 1402257, 2665959, 3615479, 2808418, 5756977, 370831, 2129581, 3684931, 2716169, 1609642, 3702443, 4359062, 6516286, 5524577, 2274853, 3831715, 3478750, 554595, 3681488, 3429348, 1630969, 808903, 1815144, 1997567, 2984611, 4966199, 2479767, 3350174, 2977670, 5758757, 1776462, 6032284, 1494544, 4211491, 1819646, 2787653, 2915889, 4723257, 1284922, 3402209, 5544351, 5096786, 1421488, 1319953, 2151630, 3090268, 3728775, 2696883, 6975901, 1682563, 1055301, 4089620, 5493813, 3388889, 3873919, 3621510, 2040327, 7563886, 7563888, 1703062, 1770702, 2049829, 1031162, 1940633, 1477077, 3485112, 3650626, 2240014, 3000880, 4833628, 1568124, 2599257, 2457551, 3963989, 7574385, 1923304, 319426, 2064891, 5952334, 5854437, 2962820, 3909564, 3110731, 3746970, 3671792, 630767, 3960389, 4625712, 1473876, 7088745, 6647453, 3236460, 1391129, 3894282, 1664227, 2816435, 5838710, 3285994, 5017387, 1476814, 2306483, 5568574, 2537299, 1183614, 6255741, 4143293, 1357913, 329489, 768679, 312415, 345232, 541888, 883644, 541088, 415457, 527634, 5327280, 3361351, 1792257, 2797861, 2954979, 3881931, 3733964, 2320378, 7574387, 7574388, 7574390, 7574391, 7574392, 2882873, 2695460, 5597023, 2098179, 7574400, 2201219, 5736061, 1582926, 1677763, 38286787, 1878759, 7543645, 393067, 3067756, 3963989, 6717825, 6731562, 6820863, 5865143, 5746807, 278585, 1821529, 6800839, 141355, 1220087, 2922338, 411415, 7574383, 5604555, 6453895, 7288042, 2011033, 1056854, 3041398, 311316, 7514011, 2211509, 2982818, 1566653, 2266481, 3357603, 2802076, 454094, 1143472, 5661746, 3042024, 4130245, 1380341, 7574381, 7574382, 3413565, 3755295, 3006464, 2866340, 2428982, 3452457, 2736710, 439982, 2713132, 6526973, 2425058, 5489217, 5231904, 3164976, 3783573, 2141733, 5281388, 2624327, 2455731, 4306045, 3318104, 4427048, 5896853, 1642281, 3095578, 3821686, 2247536, 524651, 3635836, 2429975, 2982051, 1854121, 313539, 2055462, 1357903, 3915506, 1213682, 3569080, 1676593, 2187555, 1998209, 2200136, 1739798, 756388, 2543093, 5265432, 2905532, 2479621, 7563913, 1973197, 1349271, 5559971, 7066091, 5520818, 2613717, 3676771, 1278553, 3604629, 1652907, 5804164, 1994754, 7121654, 1672102, 3579181, 3747997, 136372, 2918560, 4395334, 2363401, 2203543, 854252, 7002137, 2459502, 3587695, 2053429, 697099, 734286, 566586, 3707753, 1626985, 5784387, 1265041, 6798468, 3772198, 4244560, 2673219, 1695546, 2994363, 2730612, 3100754, 886099, 3110056, 3701884, 3350141, 3458781, 112125, 7294527, 3099936, 2317494, 2286884, 1620205, 1941646, 2451539, 5462759, 1752343, 1291046, 1767282, 1634135, 4940660, 395638, 1982490, 1476917, 1520050, 5046251, 2511270, 7111081, 3486777, 339688, 1817461, 2601124, 2242986, 1465794, 2925302, 1705533, 2922706, 4836774, 3660363, 745660, 3169468, 1520763, 3509457, 3569617, 355391, 6648567, 862026, 2023835, 2502370, 7193672, 1294506, 3343007, 2226606, 3683984, 1700134, 3292563, 7458781, 2060440, 3777791, 3219347, 5474, 771, 6020360, 6886256, 1585825, 4483044, 2054433, 4372220, 3823226, 2111371, 7014627, 1416017, 1569410, 2901923, 5597196, 3368095, 1959434, 5120511, 3800025, 1874309, 3903481, 6025066, 840023, 2682348, 3699720, 2896854, 3688479, 1502057, 1555263, 809981, 585601, 1375127, 1596918, 360669, 2840545, 5635682, 1846140, 2615488, 2849336, 3201680, 1231531, 3608639, 3146467, 5324271, 1976484, 9789163120589, 3680975, 5517500, 3089475, 3192865, 447198, 5133665, 3565552, 1662547, 2770880, 1311245, 6149285, 6569917, 6569917, 1002415, 562828, 3245190, 5484232, 2459645, 3568909, 7552342, 1203580, 4082130, 2222106, 609377, 6827736, 1605542, 5782928, 1733405, 7073872, 2003397, 3176790, 2704798, 940479, 17024143193031, 3495072, 5246769, 1886726, 3806514, 444669, 4346701, 3637879, 1651912, 2810301, 2483585, 6013518, 2967201, 1712139, 1434614, 2037858, 1486073, 796522, 1704970, 7562539, 6006077, 2904194, 2299901, 7379672, 3428969, 3695243, 1646580, 4856787, 3693603, 1695961, 573162, 1602006, 5225660, 7279147, 4130519, 2847085, 432838, 3367472, 1661557, 5578142, 3848961, 556991, 5470076, 1934684, 7423396, 3827073, 2216672, 5925390, 2422320, 6011897, 1684971, 5874848, 2904364, 1826106, 1299778, 3889066, 1651396, 2474610, 2954389, 2912090, 1557183, 1937029, 2507487, 5478924, 1715294, 2922372, 5463645, 1681132, 4780988, 913716, 3545388, 2932771, 5413653, 1845425, 7295773, 7094153, 2493682, 2990927, 2887564, 2677697, 408672, 5316507, 3703101, 7094153, 2493682, 2990927, 3632558, 2887564, 2677697, 408672, 5316507, 3703101, 1308009, 4770812, 5337079, 3755004, 1415101, 5745185, 982968, 3660773, 1308009, 4770812, 5337079, 3121001, 247806, 2271606, 3931104, 37258313205507, 5505571, 2668317, 2885795, 7051723, 3732788, 6507006, 1709842, 3412978, 119570, 3678477, 1576605, 7175099, 1305918, 2924041, 530050, 1671341, 6538336, 2590428, 3111412, 3444188, 2745018, 4100202, 2604892, 3778127, 2930905, 5229169, 7201798, 1935783, 1766070, 1934713, 3600756, 2213804, 2767444, 2422252, 2581588, 2008408, 3225517, 1583004, 806374, 4743209, 2206428, 1337908, 3639063, 5819000, 3696099, 2222914, 2000227, 7422917, 1883283, 1686313, 5521222, 3089084, 2442179, 1759304, 1747395, 6538525, 2553999, 6982855, 3685130, 6751808, 6099941, 4934225, 1516378, 5805504, 675584, 470956, 2510902, 1242503, 3749719, 2487185, 4129854, 3526684, 5851713, 1567499, 1723502, 485685, 5331758, 3063021, 312874, 5086885, 1334799, 2673350, 2094529, 816937, 1984183, 3660915, 5067745, 1836636, 2570299, 4974043, 2958926, 1617612, 16642067, 2324943, 1207415, 7546911, 2818215, 4244697, 3974286, 1694497, 7165647, 3671337, 2801423, 2510424, 2306838, 1388511, 624595, 1297286, 2436358, 6091196, 5512914, 487571, 534127, 2815852, 6458416, 3804033, 4933567, 5744422, 5722902, 5470939, 5452179, 5457991, 1640994, 2873717, 1524883, 1845772, 3674891, 1875155, 2464178, 1739033, 7421606, 3724024, 1791754, 4159572, 967165, 2701754, 5567026, 2472185, 5552462, 331054, 249043, 3889066, 1651396, 2474610, 2954389, 2912090, 1557183, 1937029, 2507487, 5478924, 1715294, 2922372, 5463645, 1681132, 4780988, 913716, 3545388, 2932771, 5413653, 3084699, 2785576, 379257, 1860558, 4848841, 3177975, 2873752, 2529630, 2521006, 400020, 7543202, 7534845, 3699951, 5905174, 1989575, 2497300, 451053, 2184388, 1392529, 434181, 4851652, 3721264, 2702019, 1597479, 336108, 1338400, 7463026, 1821872, 3678098, 1974435, 6474880, 3134012, 2177055, 1458500, 3305645, 856005, 1595486, 5458093, 1612392, 2460705, 6267145, 1580571, 1538872, 5824666, 3872292, 2604202, 1970794, 1794494, 6914627, 3913043, 522169, 1557181, 2889144, 1682581, 3570595, 2952667, 3531094, 972593, 2828325, 3718893, 625620, 1826923, 3777243, 3162194, 2071143, 3175833, 2822802, 6450734, 3075720, 1552345, 400875, 3695422, 3617908, 4999095, 868500, 3273027, 1830647, 3001168, 839357, 143026, 6509298, 6216983, 2866493, 1699319, 3913043, 6043877, 2777244, 3790887, 1597535, 6096882, 5366786, 1943658, 5967356, 4644327, 2573869, 4886905, 5497221, 6166360, 3757587, 1601279, 409682, 3656856, 1880412, 5548982, 440803, 3486898, 1469614, 1691653, 3517982, 1971388, 1591567, 2016029, 1915474, 1257990, 2836295, 3495373, 1595131, 2712714, 2038888, 2667948, 2112482, 5898371, 2152725, 1794645, 1766575, 3413233, 1394393, 2752920, 5826810, 1800219, 3236194, 780379, 5880743, 3888975, 3239977, 1672342, 1289969, 2634502, 5898371, 1994578, 6070379, 3974343, 3862812, 1959522, 2695007, 1975949, 5539548, 3817687, 1969538, 526457, 3648898, 2497733, 3919737, 3230126, 3112996, 1649655, 1414281, 1419212, 1209447, 4702472, 524427, 1578727, 4670311, 6569858, 1900395, 5593658, 748627, 3220216, 3036369, 1533891, 6104868, 5208730, 3220691, 2113571, 5692470, 1545496, 212279, 6832768, 3411897, 5039866, 4198229, 3220150, 5040626, 6945400, 1580625, 3783670, 5086760, 2954390, 4649501, 5605098, 4316966, 3814007, 1893227, 1570197, 3950540, 1662866, 3720504, 124749, 1739328, 1839751, 3267052, 3780004, 5534969, 5493628, 2189066, 4933333, 5000031, 2414326, 1660312, 877064, 3650461, 1740582, 7532482, 512763, 2995936, 6184316, 1691708, 3970089, 1463216, 17609241760924, 1760924, 2081737, 1557103, 411428, 2094576, 2099900, 2452915, 2454660, 2730564, 2996042, 3354127, 3643246, 4123328, 4123458, 4453267, 4503459, 4853506, 5561809, 6300149, 5746365, 7505479, 7000605, 7430234, 6278694, 6300073, 6304005, 6452374, 6541836, 6646113, 6760404, 6777359, 6833458, 6836893, 6884306, 6901124, 6902041, 6912172, 6967000, 5766391, 1437151, 1718606, 6199995, 7562358, 4214240, 3694198, 2852186, 1170709, 2872105, 1682394, 1202364, 2153009, 4366270, 1824797, 927167, 1295001, 919407, 6814675, 7108753, 5556574, 2818776, 2749154, 215024, 5307145, 4186227, 5721017, 1295391, 2514839, 5895587, 903753, 5642148, 3886007, 7576967, 7577628, 7577632, 7577633, 7577634, 7577635, 7577636, 904700, 7577637, 7577638, 7577639, 7577641, 7577645, 7577646, 7577648, 7577649, 7577650, 7577652, 7577654, 455254, 7577656, 3708532, 7577659, 7577660, 7577661, 7577662, 7577663, 2951831, 1632286, 3133284, 2888737, 2959380, 7316490, 2923902, 1879135, 3817089, 3743709, 5784317, 2196639, 3491472, 2932823, 3556939, 4721537, 5557000, 3707957, 4449825, 4335108, 1650317, 2627810, 4940330, 1197771, 2515859, 924199, 5342184, 3178756, 6461474, 3961089, 2434803, 4028439, 3820443, 2753029, 3902921, 1636847, 5146101, 1352371, 6149586, 2280915, 1566790, 2461560, 1811706, 1663869, 6593705, 1356823, 6712790, 1961069, 3510802, 3674914, 2185637, 1714183, 5772036, 4814426, 2011425, 5719032, 3703405, 5208010, 120696, 1677751, 1390504, 5058856, 3153335, 1997462, 3603807, 41413, 2439981, 2152273, 2837758, 2846092, 5850864, 1155577, 3507172, 287241, 3741419, 692902, 5316041, 5301410, 3682607, 1753932, 3091367, 788325, 1449159, 3366992, 916292, 6347261, 1434657, 6102366, 1255406, 2901402, 1076556, 2798150, 1729711, 5683203, 6837500, 1962691, 5198233, 599132, 567368, 3950087, 4074777, 6419244, 2916236, 4800287, 3757673, 293239, 6536106, 809165, 3415097, 854987, 1990729, 1476644, 3197548, 3732761, 3042947, 1669694, 2670433, 2863240, 3744754, 3042024, 1414583, 1405201, 3900432, 5568878, 1344308, 1827745, 3192935, 1904605, 480826, 1254895, 3641472, 4882220, 1634079, 3172505, 2256215, 562530, 1394768, 786326, 6158708, 3352107, 5391121, 5067010, 2468375, 3201256, 3724600, 6286341, 3549181, 7186722, 339068, 1979304, 5435620, 6028061, 2708731, 5178280, 1201818, 5699567, 3397714, 2247468, 2719292, 2179111, 2232637, 2368305, 1411884, 1623902, 3824123, 2917535, 5641251, 3737863, 1900927, 3026180, 6873059, 3324192, 4289072, 3233197, 2023564, 3691680, 2277265, 1757932, 2676236, 6428562, 5881430, 7576691, 7576693, 7576695, 2794461, 7576709, 1395712, 5530715, 7576703, 5444350, 2207345, 2842087, 3572040, 2162120, 2440783, 3499995, 5130206, 2370767, 4558726, 2591394, 4060762, 3628872, 3532285, 4675569, 2835676, 1528880, 1383825, 7272444, 1961891, 3079549, 2501462, 1986742, 7545766, 5400102, 7070700, 7100013, 3521381, 5504146, 1976484, 2609729, 957128, 997153, 5727892, 2380804, 1310682, 2807482, 3101639, 3044133, 608631, 2563142, 1156897, 3490631, 3662992, 1795637, 5452668, 4217430, 2251303, 3057877, 1646186, 5327503, 2493682, 6191961, 1785252, 6340741, 2488702, 3720570, 2810346, 4877063, 3854293, 575662, 1907014, 3047479, 1986742, 1716079, 2606512, 2606512, 1612436, 1982506, 220935, 1447073, 4069988, 5950280, 5613707, 2720250, 1764190, 7362662, 4327453, 1854383, 1667570, 2956296, 1578036, 354759, 2870581, 1462709, 3718084, 4797932, 3337441, 5410633, 2621030, 1837491, 2825611, 3207688, 6101891, 1965085, 1618019, 1977256, 3936998, 264703, 3180155, 1583081, 1857925, 3577533, 1889832, 1674133, 2395730, 1816288, 865228, 1863285, 562845, 4140811, 3522511, 4675782, 2049637, 885029, 4888891, 3555164, 1112380, 1707338, 3141100, 2815451, 1346358, 1485567, 1929667, 3411709, 545781, 3931308, 2376400, 2074773, 4350786, 5696509, 1212123, 3675423, 870306, 369681, 3911642, 732670, 65153223208273, 1947104, 2861616, 7146696, 5727966, 5544344, 2200571, 1654575, 2870129, 2438149, 1783803, 4726846, 566405, 5521249, 2964283, 1718606, 2931383, 6068515, 356909, 3387580, 3662963, 1390843, 3380309, 2273250, 1463033, 5696927, 3604144, 1995181, 2223354, 621792, 4298881, 2389991, 3018399, 1738402, 4216313, 1588182, 1509640, 3475709, 2732012, 3786946, 5444310, 2740735, 3678170, 1760310, 2760069, 2136431, 4414133, 2661522, 2298033, 3693685, 2041416, 2993613, 4901435, 2629615, 6954201, 1481171, 2857562, 478496, 3487949, 3046275, 1961336, 1919727, 5000014, 2129630, 7205609, 1728908, 446226, 1462790, 1840202, 2094275, 2889323, 2534715, 3685884, 2578386, 1396216, 2598706, 2455062, 1924872, 2824021, 3600181, 361852, 3709369, 346069, 1824086, 1697385, 3066506, 5749982, 4729716, 2257854, 5831412, 1673283, 3681202, 6196146, 3805496, 2819313.42036, 1825683, 5474771, 1567583, 1322970, 3837507, 3651818, 237116, 410761, 3069439, 3774885, 5840365, 3731427, 5725959, 1693284, 6380261, 377836, 7126782, 3514399, 1819063, 1553514, 5512348, 5227442, 5717626, 2876539, 5748062, 2074751, 2050140, 2550766, 2206884, 3206914, 1805487, 4097284, 3022119, 3632876, 3520474, 2643649, 7218822, 4146225, 3984929, 1667881, 418647, 1664955, 558545, 5031716, 2633481, 1384334, 2984889, 3590715, 313671, 5289725, 4252578, 4603458, 2267529, 1609914, 3824465, 4846540, 3084119, 7605580, 7605581, 7605582, 7605583, 7605585, 7605587, 7605588, 7605589, 7605590, 7605591, 7605593, 7605594, 7605595, 7605596, 7605597, 7605599, 7605600, 7605601, 4701213, 2928081, 4008546, 4807572, 1878987, 3545845, 4428798, 6024473, 1013418, 3779727, 6483218, 4739767, 2572437, 4611726, 3639522, 2952445, 1815959, 6217685, 6817815, 1631144, 2716790, 2479159, 7584196, 2892732, 3329644, 6766161, 7544571, 3569727, 5436814, 5152657, 2865540, 3747030, 763507, 502367, 1569338, 6847397, 1664206, 523063, 1713599, 1053435, 4200758, 1700392, 615060, 7566415, 297935, 4425570, 4354774, 6052422, 1621816, 896160, 3514470, 1460803, 5387368, 3103524, 4870394, 3593977, 5896865, 2747553, 447416, 1937367, 1649390, 3255515, 3030719, 1978537, 974974, 1160104, 2519609, 5438063, 1698518, 1948214, 5509365, 5638527, 2479857, 2085706, 4705554, 2118873, 5086697, 5269551, 1677684, 5788578, 3896968, 1980068, 2835893, 7593093, 5813786, 1931832, 3595417, 1647718, 2629657, 3841128, 3799998, 253185, 1485715, 3586929, 1891070, 6469397, 2593776, 4322359, 2223087, 3678963, 5404111, 928932, 1374761, 1264371, 3679928, 2046467, 6225379, 5171444, 5167694, 5157983, 5423355, 7571698, 2568734, 5265717, 1132547, 734801, 1165108, 6096329, 3728829, 5043345, 3658285, 3589964, 3573613, 3557368, 3387826, 1076550, 5069883, 1621292, 3966524, 1451655, 7596558, 7596559, 7596560, 7596562, 7596691, 7596695, 7596696, 2088004, 7596699, 4889205, 916783, 5206625, 1724476, 7467156, 1746469, 3979164, 3864964, 5882565, 3976691, 7598797, 7598799, 7598801, 7598802, 3455263, 7598804, 7598806, 7598807, 1414884, 7598808, 7598809, 7598810, 7598812, 2976790, 5612226, 7598813, 7598816, 2905077, 7598817, 5521190, 7598819, 7598821, 3029253, 3014556, 4350189, 3727215, 6852010, 2971901, 2857239, 556968, 1985203, 2543526, 776388, 2586833, 376396, 1916839, 1464805, 2634571, 2960638, 1399931, 2609575, 7589970, 7589971, 7589972, 7589973, 7589974, 7589976, 7589978, 7589979, 4848465, 3901079, 6205585, 7589982, 7589984, 7589985, 7589986, 7589987, 7589988, 1585804, 3492425, 3919924, 2340745, 3533379, 2969546, 5576533, 2510021, 1890436, 1980004, 5845176, 7590090, 5853829, 2571202, 3543036, 2877339, 1846397, 7140150, 5629504, 3704320, 2223149, 3185643, 6618462, 1529469, 2530165, 1891368, 5941925, 3118877, 1549214, 1730735, 802902, 2663439, 1663236, 3430946, 1382959, 2326215, 5571331, 2002651, 1553455, 2479609, 1352254, 1742587, 2431609, 1536702, 6203635, 650830, 2798632, 5460163, 4883143, 2149868, 5510498, 7579758, 3808106, 2893867, 2032283, 2631904, 1841509, 2414847, 3357194, 6036604, 2174969, 2703901, 3694470, 3839094, 5537746, 728208, 4160966, 1931520, 3835106, 2805936, 3298590, 4273592, 3673153, 1886819, 3120127, 6547114, 5745602, 6629374, 6480535, 5784632, 3305227, 2749185, 3100074, 3764961, 421611, 3166741, 5718531, 1641988, 3072114, 3718648, 3696531, 4995458, 1489352, 5332812, 3990225, 2624923, 2031223, 1868778, 3913081, 1149838, 2330762, 3742469, 846554, 5582180, 2156077, 6507889, 304475, 3745615, 3561381, 3132933, 3697800, 3149627, 5302706, 4106370, 2793053, 1860112, 2340145, 1289525, 7404080, 1661675, 1324386, 1179152, 1740676, 2109767, 708823, 5343022, 420771, 2667812, 2733535, 3699329, 1770511, 2656391, 1819753, 3853276, 2480456, 1460852, 1363261, 1425622, 385105, 3800097, 5061445, 1994320, 4309546, 3239127, 1286937, 2847679, 2319181, 1881982, 5329128, 1707180, 1055018, 1866817, 1700898, 4148579, 2310887, 1697320, 2874444, 2449214, 687298, 3285999, 3696921, 5119425, 3604500, 5540020, 4513718, 3921722, 5160514, 3197249, 1405239, 2620598, 1428463, 1480565, 992578, 1424798, 1780210, 2440885, 7366567, 2698054, 7594744, 7594746, 7594747, 7594748, 7594749, 7594750, 7594751, 7594752, 7594753, 7594754, 7594756, 7594758, 7594759, 7594763, 7594764, 7594765, 7594766, 2420501, 7594767, 7594769, 7594774, 4545101, 7594776, 7594777, 7594778, 7594779, 7594780, 7594781, 7594782, 7594783, 7594784, 7594785, 7594786, 7594788, 7594789, 7594790, 5001366, 3277158, 1510818, 1313887, 5092201, 2550414, 5771583, 5745150, 3768800, 1203713, 2031462, 605936, 5043256, 3684726, 4241064, 3652112, 3797080, 1502512, 4243511, 2398459, 1686942, 1772458, 2415314, 2581348, 2081656, 5941814, 591201, 2025979, 1733434, 2575661, 3484494, 1587693, 3654164, 5760249, 3773397, 3617288, 2853632, 1851969, 2960319, 2742266, 293407, 6133550, 4698671, 2740472, 3676395, 3679140, 5472351, 1803169, 3690316, 5538831, 116040, 5239176, 901784, 7595741, 7595742, 7595743, 4441552, 7595745, 876613, 7595746, 7595748, 7595749, 7595750, 7595751, 7595752, 7595753, 7595754, 7595755, 7595756, 3024291, 7595757, 3559791, 866665, 7595759, 7595760, 7595761, 7595763, 7595764, 7116999, 7595765, 7595766, 7595767, 7595768, 7595770, 7595771, 7595772, 7595773, 7595774, 1867649, 2371914, 3904844, 4119570}
p1Maps = {3006464, 434181, 1712139, 3661838, 311316, 3604500, 2629657, 1982490, 7553051, 7577628, 3514399, 7577632, 7577633, 7577634, 2932771, 3112996, 2113571, 7577635, 1597479, 7577636, 4743209, 7577637, 7577638, 7577639, 7577641, 7577645, 7577646, 7577648, 7577649, 3186738, 2048050, 7577650, 7577652, 7577654, 3047479, 7577656, 278585, 4243511, 7577659, 6103100, 7577660, 7577661, 7577662, 7577663, 4726846, 852036, 876613, 1990729, 3366992, 385105, 3162194, 7585875, 7585876, 7585877, 1056854, 7585879, 409682, 2932823, 7430234, 802902, 1597535, 7585888, 7585889, 5472351, 7585892, 7585893, 3514470, 7585896, 7585897, 7585898, 7585899, 7585900, 7585901, 1826923, 7585903, 7585904, 6070379, 7585906, 7585907, 7585908, 7463026, 4186227, 7585911, 7585912, 3072114, 4055165, 974974, 5898371, 6340741, 2703498, 524427, 2023564, 1941646, 868500, 3604629, 2572437, 1589402, 5824666, 2777244, 1548446, 2982051, 1974435, 2818215, 1294506, 1671341, 745660, 1425622, 3817687, 1695961, 360669, 2425058, 336108, 4350189, 1769722, 2965755, 5423355, 3178756, 1663236, 1949959, 2457864, 4702472, 6267145, 3678477, 2154770, 958752, 2187555, 2785571, 2695460, 885029, 2785576, 401705, 6840620, 2572599, 1712441, 3703101, 1458500, 3572040, 721229, 3531094, 3318104, 4833628, 3711328, 3236194, 3277158, 524651, 1900927, 6717825, 5497221, 6070666, 1728908, 6168975, 2752920, 3686809, 2580890, 2023835, 2802076, 541088, 7111081, 6300073, 1819063, 2810301, 1794494, 41413, 1532360, 2613717, 3768800, 5431781, 2433512, 3326440, 2810346, 451053, 3531249, 1925618, 5775860, 6300149, 1155577, 2720250, 2064891, 967165, 5120511, 5718531, 2753029, 4203014, 2040327, 877064, 967177, 287241, 3932685, 1311245, 1360399, 1860112, 1737233, 1040912, 3654164, 1794589, 2703901, 5505571, 4940330, 4309546, 3367472, 6660659, 5194293, 1352254, 5489217, 1851969, 6914627, 2736710, 1999433, 6013518, 1794645, 7332438, 1278553, 3539557, 3236460, 3703405, 1557103, 2474610, 5710452, 3637879, 6832768, 3621510, 3695243, 3023500, 615060, 7586454, 6480535, 901784, 1295001, 2032283, 3343007, 1999538, 1352371, 3015348, 3220150, 2745018, 3089084, 1557181, 1557183, 5612226, 5882565, 4883143, 2376400, 3990225, 2818776, 3777243, 2507487, 3146467, 2310887, 5522156, 3433197, 3678963, 2925302, 3220216, 1630969, 7594744, 7594746, 7594747, 5784317, 7594748, 7594749, 7594750, 7594751, 7594752, 771, 5571331, 7594753, 5473030, 7594754, 7594756, 7594758, 7594759, 697099, 7594763, 7594764, 7594765, 7594766, 7586576, 7586577, 7586578, 7586579, 5391121, 3891989, 7586581, 7586582, 7586583, 7586584, 7586585, 7586587, 2024218, 7586589, 7586590, 7586591, 7586592, 7586593, 7586594, 4211491, 7586595, 7586596, 7586597, 7586598, 7586600, 7586601, 7586602, 7586603, 7594788, 7594789, 7594790, 385840, 2368305, 1344308, 3695422, 4350786, 5784387, 3490631, 1753932, 2319181, 2990927, 418647, 1516378, 6620001, 2581348, 4670311, 1893227, 7054190, 4940660, 2081656, 1663869, 7250826, 2515859, 4359062, 1549214, 1827745, 2982818, 1721251, 4252578, 3679140, 1672102, 7545766, 5178280, 1631144, 1803169, 5514161, 5227442, 1958837, 2892732, 6415298, 2442179, 7422917, 2081737, 1860558, 4465627, 2794461, 3507172, 5342184, 3285994, 1868778, 7070700, 377836, 3285999, 3744754, 2237427, 721910, 1434614, 5719032, 1819646, 5366786, 2098179, 7201798, 7521287, 1704970, 7316490, 1532940, 4465679, 3900432, 1319953, 369681, 2663439, 1770511, 5538831, 2163742, 885790, 1295391, 1434657, 1492000, 4146225, 5661746, 1287222, 5784632, 4129854, 5432386, 3089475, 7193672, 7586891, 3089485, 4244560, 2581588, 5530715, 599132, 312415, 6538336, 1877091, 1647718, 1819753, 4285551, 1418353, 3662963, 7562358, 2876539, 1819776, 566405, 6726790, 5948551, 3245190, 410761, 2712714, 3974286, 3875982, 6915216, 345232, 3662992, 1524883, 5719188, 1672342, 2917535, 3368095, 5874848, 2196639, 5301410, 4818087, 1369255, 2499754, 2950316, 1033390, 1729711, 1844404, 541888, 3974343, 5604555, 1770702, 1664206, 3220691, 3769557, 4244697, 2835676, 3835106, 1664227, 3204335, 2819313.42036, 1213682, 6571252, 1967351, 1606904, 5760249, 1811706, 3777791, 4097284, 4900101, 6538525, 2286884, 3671337, 7562539, 599339, 6833458, 3720504, 566586, 6006077, 992578, 116040, 5096786, 886099, 2008408, 1975642, 3564891, 1934684, 2852186, 304475, 591201, 2000227, 3709369, 1934713, 3720570, 361852, 3663231, 2483585, 3827073, 3728775, 2319756, 3515792, 1402257, 2901402, 4564380, 2704798, 3024291, 7423396, 296361, 2016029, 2459054, 2606512, 2835893, 533946, 3728829, 927167, 1713599, 4130245, 6800839, 6096329, 4441552, 558545, 3712466, 1828315, 4974043, 3696099, 3089894, 6202855.1761416, 1705452, 1254895, 5146101, 763383, 3343865, 3532285, 542206, 3704320, 4335108, 3950087, 1959434, 2852366, 4449825, 1746469, 5400102, 7259687, 1697320, 312874, 3352107, 2713132, 2573869, 2156077, 5293621, 1795637, 3851834, 3966524, 1705533, 6751808, 5629504, 3745348, 3696199, 7505479, 2041416, 3556939, 2418253, 2958926, 3778127, 1836636, 1959522, 2049637, 1607271, 1697385, 3647084, 534127, 2983538, 763507, 3180155, 5736061, 7227007, 7218822, 1451655, 1975949, 3491472, 5727892, 5432981, 1590935, 3901079, 2967201, 1738402, 6547114, 2696883, 1984183, 3679928, 1197771, 2172624, 6498002, 4933333, 4130519, 1394393, 2590428, 3458781, 5539548, 5727966, 7595741, 7595742, 7595743, 7595745, 7595746, 7595748, 7595749, 7595750, 7595751, 7595752, 5605098, 7595753, 1681132, 2877165, 7595754, 7595755, 3671792, 5850864, 7595756, 2434803, 7595757, 7595759, 7595760, 4318967, 7595761, 7595763, 5039866, 7595764, 7595765, 1705725, 7595766, 5523199, 7595767, 7595768, 7595770, 37258313205507, 7595771, 7595772, 7595773, 7595774, 2189066, 329489, 4089620, 411415, 3639063, 1156897, 6104868, 2156325, 5744422, 2836263, 2049829, 411428, 6752042, 5031716, 5343022, 3868463, 2598706, 1165108, 4966199, 2557752, 2836295, 3549002, 862026, 3589964, 124749, 1582926, 3745615, 370506, 3090268, 1623902, 5597023, 4425570, 788325, 796522, 3573613, 2459502, 919407, 1779582, 3630979, 1746823, 7243656, 3655567, 3696531, 7514011, 1583004, 2877339, 870306, 2901923, 7366567, 2926504, 2213804, 3721136, 3729330, 4999095, 1664955, 3909564, 1566653, 4933567, 2770880, 2828225, 1476546, 1533891, 4851652, 1419212, 9789163120589, 3950540, 624595, 6760404, 346069, 3499995, 1451996, 5130206, 4483044, 2017255, 1583081, 468972, 1255406, 7251952, 3565552, 6096882, 215024, 3557368, 2320378, 2459645, 247806, 3549181, 6629374, 1132547, 1714183, 5597196, 5539855, 2959380, 6817815, 7473176, 2222106, 4327453, 1632286, 3688479, 7546911, 1476644, 2828325, 411687, 3581991, 141355, 2893867, 5269551, 3721264, 7235639, 3221567, 1673283, 1566790, 5457991, 567368, 1394768, 2451539, 780379, 2050140, 3491935, 1943658, 1845355, 5654635, 7579758, 3041398, 526457, 2074751, 4106370, 2656391, 5613707, 370831, 1468561, 2074773, 3172505, 2918560, 2713762, 2885795, 1976484, 6965421, 5458093, 575662, 1730735, 1845425, 5540020, 6203577, 2615488, 3786946, 313539, 551113, 1476814, 3254479, 3057877, 2631904, 3639522, 7014627, 3705060, 7604453, 854252, 7571698, 6203635, 5171444, 5826810, 444669, 3475709, 3737863, 1509640, 1591567, 1952016, 5105940, 1739033, 3696921, 7186722, 1837351, 6359335, 1132841, 1476917, 485685, 3238202, 3197249, 2787653, 313671, 411975, 2599257, 5556574, 6646113, 1354086, 2476398, 7227763, 1337717, 395638, 2271606, 608631, 7588217, 7588218, 379257, 7588221, 7588222, 3164541, 7588224, 7588225, 5638527, 7588229, 7588230, 2951560, 7588233, 7588235, 7588238, 7588239, 7588240, 7588243, 7588244, 7588245, 7588246, 7588249, 7588251, 7588253, 7588256, 7588257, 5499302, 1935783, 1411495, 3230126, 5327280, 5302706, 1837491, 1747395, 354759, 3181008, 4082130, 6121939, 1706451, 1477077, 5474771, 2730450, 3402209, 3828207, 5040626, 1780210, 3803640, 1124859, 2025979, 6507006, 264703, 5745150, 1886726, 1845772, 5925390, 6777359, 1427984, 7596558, 7596559, 7596560, 7596562, 444948, 2468375, 2558489, 5745185, 1640994, 3705380, 1608238, 3000880, 2861616, 928304, 5737012, 1337908, 5941814, 346677, 6097465, 4901435, 3590715, 1739328, 5851713, 2673219, 2730564, 1460803, 3533379, 3361351, 903753, 3492425, 2705995, 4934225, 502367, 4008546, 1886819, 7088745, 3197548, 7563886, 7563888, 5229169, 2730612, 1460852, 2239095, 5819000, 7563913, 3066506, 2550414, 5327503, 7596691, 2198167, 2951831, 7596695, 7596696, 7596699, 2591394, 2984611, 756388, 5941925, 1854121, 1231531, 6974129, 2894515, 1985203, 3656379, 2099900, 4123328, 3746500, 2179111, 2673350, 6925000, 3680975, 1698518, 846554, 2206428, 1878759, 3042024, 1387242, 1649390, 1919727, 1264371, 7121654, 895735, 3615479, 1182462, 1485567, 2853632, 7301894, 4877063, 5557000, 3156745, 5532425, 1567499, 2583328, 2247468, 1477421, 1411884, 3164976, 1616692, 2452276, 1346358, 2222914, 4123458, 2698054, 2624327, 3558216, 5950280, 5000014, 3484494, 3001168, 2501462, 1821529, 1764190, 5000031, 1567583, 2681705, 1502057, 2247536, 2870129, 4729716, 5000056, 1846140, 3804033, 4721537, 1354626, 1297286, 1665929, 1149838, 1485715, 1674133, 1280922, 3820443, 6032284, 2501538, 5000099, 420771, 3091367, 1977256, 1772458, 7072684, 3394477, 1002415, 1854383, 3681202, 6196146, 5548982, 3886007, 5721017, 2984889, 2960319, 5745602, 3328963, 7097287, 854987, 1878987, 297935, 6884306, 2763731, 625620, 1682394, 3853276, 895971, 2550766, 2223087, 1428463, 1649655, 4770812, 3755004, 5696509, 1395712, 6286341, 2796550, 3894282, 1124089, 1739798, 2976790, 1338400, 2460705, 3664938, 2223149, 6458416, 1551411, 355391, 3673153, 748627, 3697752, 1715294, 1879135, 1313887, 5524577, 609377, 912490, 1780844, 1961069, 1723502, 3517551, 1207415, 5213306, 339068, 1846397, 6474880, 1682563, 3697800, 3779727, 2075791, 1682581, 1286937, 3656856, 3746970, 896160, 2747553, 2206884, 928932, 5647530, 1707180, 1469614, 1805487, 1821872, 1207484, 2100416, 4697282, 2510021, 6982855, 7146696, 2370767, 3697872, 3681488, 3509457, 249043, 3747030, 3239127, 3255515, 3337441, 920803, 1338610, 2493682, 1486073, 2223354, 2952445, 2837758, 2960638, 2092290, 5188867, 3026180, 2436358, 527634, 6483218, 4705554, 4984086, 4074777, 6024473, 3755295, 3099936, 478496, 4427048, 3099948, 1658156, 331054, 2575661, 1502512, 2870581, 1289525, 1944889, 2534715, 1363261, 1305918, 1076550, 2501960, 1707338, 1453388, 1076556, 7605580, 1666383, 7605581, 65153223208273, 7605582, 7605583, 7605585, 7605587, 7605588, 2256215, 7605589, 7605590, 7605591, 7605593, 7605594, 7605595, 7605596, 7605597, 7605599, 7605600, 7605601, 4148579, 5582180, 1617254, 3837289, 6507889, 1961336, 1568124, 1969538, 3648898, 6901124, 5492101, 2846092, 1265041, 1142162, 4299202, 2624923, 1677763, 5696927, 1510818, 3780004, 4836774, 4271527, 6852010, 3100074, 3632558, 5017009, 2452915, 3485112, 4009415, 3902921, 2993613, 454094, 2928081, 2280915, 6712790, 1469911, 2952667, 3444188, 1437151, 4214240, 806374, 2665959, 5746152, 2682348, 3141100, 2149868, 3976691, 2543093, 1699319, 1396216, 7638522, 2698747, 5967356, 904700, 732670, 3591676, 2649598, 1641988, 3132933, 2207242, 2240014, 3354127, 1494544, 3517982, 3984929, 2141733, 6278694, 3452457, 6450734, 6557245, 6516286, 3190335, 7294527, 3837507, 3960389, 650830, 1994320, 2395730, 5869140, 2510424, 3755613, 7594767, 3026533, 3640933, 3329644, 7594769, 2207345, 1863285, 3042947, 1937029, 7594774, 3075720, 1650317, 7594776, 1273489, 7594777, 2977431, 1519256, 7548567, 7594778, 6647453, 1576605, 3018399, 3681952, 7594779, 7594780, 716454, 7594781, 1756843, 7594782, 143026, 7594783, 7594784, 2731707, 839357, 5746365, 7594785, 7594786, 5484232, 1617612, 6827736, 6967000, 2002651, 2502370, 339688, 421611, 3632876, 3731180, 7581422, 7581425, 7581426, 1289969, 7581430, 7581431, 3084024, 7581433, 1830647, 7581435, 7581437, 3411709, 1601279, 675584, 7581441, 7581442, 7581443, 7581444, 7581445, 7581446, 7581447, 7581448, 7581449, 7581450, 7581451, 4140811, 7581453, 2633481, 3305227, 7581456, 7581457, 7581458, 446226, 2420501, 1634079, 3772198, 1740582, 1642281, 5017387, 5246769, 4640565, 3600181, 1691451, 3149627, 5246780, 5410633, 3690316, 1994578, 7090005, 4198229, 1634135, 3084119, 2912090, 2543452, 3133284, 6025066, 3067756, 1716079, 2461560, 3919737, 3592058, 1183614, 585601, 5402499, 1740676, 2977670, 4558726, 2035594, 2887564, 1699725, 2011033, 1650589, 2674591, 3534755, 1961891, 2543526, 1609642, 470956, 1445806, 3411897, 339904, 7532482, 856005, 2224069, 1748936, 2969546, 3854293, 1937367, 1552345, 3911642, 1322970, 7458781, 1904605, 1388511, 2273250, 3731427, 3100650, 2732012, 3624946, 1380341, 5337079, 3903481, 2174969, 3543036, 1994754, 733188, 1691653, 2445318, 2363401, 7491603, 16642067, 3526684, 5173280, 3239977, 3919924, 2428982, 2510902, 1691708, 1724476, 3608639, 7073872, 1921105, 3100754, 7589970, 7589971, 7589972, 7589973, 7589974, 1347672, 7589976, 7589978, 7589979, 3797080, 7589982, 3641438, 7589984, 7589985, 1118306, 1380450, 1618019, 7589986, 7589987, 7589988, 4100202, 520308, 3821686, 5746807, 3641472, 2904194, 5804164, 3256453, 2863240, 2330762, 6205585, 1454226, 487571, 7467156, 5001366, 3756184, 2060440, 3747997, 2601124, 1978537, 3305645, 1421488, 2298033, 2805936, 3985587, 1986742, 5845176, 4182202, 2994363, 5517500, 3387580, 1609914, 5460163, 3018949, 5796038, 7590090, 1987288, 708823, 2232543, 5435620, 5329128, 5656820, 3379444, 5509365, 2740472, 2093306, 4870394, 2240763, 3641597, 3961089, 5067010, 3150084, 6304005, 1741073, 1405201, 1610004, 6902041, 4591899, 3862812, 2011425, 3690789, 1888550, 2986279, 3035430, 2797861, 1700134, 3060011, 2904364, 5058856, 2928937, 3682607, 913716, 1405239, 3805496, 5919033, 2232637, 5771583, 3273027, 4395334, 5484871, 2109767, 2371914, 840023, 3699034, 1880412, 2412906, 2847085, 3559791, 3600756, 4886905, 5239176, 5452179, 5198233, 3084699, 6975901, 2879902, 2511270, 2609575, 1995181, 5083570, 2306483, 1520050, 1503669, 1462709, 3387826, 6091196, 1929667, 2003397, 1602006, 2372055, 3731931, 5255657, 7066091, 1667570, 3838452, 6730235, 2740735, 7090691, 1257990, 1462790, 3207688, 2716169, 3617288, 6541836, 3641873, 6205970, 3510802, 3166741, 3387926, 5681686, 4649501, 7000605, 2568734, 6140452, 1700392, 7279147, 356909, 3658285, 4698671, 4289072, 2937392, 5567026, 5313078, 4723257, 1569338, 2519609, 3134012, 1077820, 2609729, 3428934, 2798150, 2200136, 1593939, 455254, 6042206, 5206625, 1446502, 1815144, 3428969, 1970794, 914035, 3814007, 3699329, 1569410, 3206914, 5853829, 1839751, 389768, 4706955, 1585804, 2822802, 1544861, 6836893, 1585825, 193187, 692902, 1487531, 3175085, 2962094, 2749103, 1143472, 1766070, 4739767, 1536702, 1962691, 1651396, 1569481, 7598797, 7598799, 7598801, 7598802, 1716946, 1982506, 7598804, 5444310, 4354774, 7598806, 7598807, 7598808, 7598809, 7598810, 7598812, 447198, 7598813, 2216672, 7598816, 2749154, 7598817, 5067492.544145, 7598819, 2413286, 3936998, 7598821, 7205609, 3764961, 1757932, 1430257, 6509298, 1479391, 6648567, 3724024, 1463033, 512763, 1053435, 5444350, 2749185, 365315, 5772036, 2634502, 4903690, 3674891, 4961039, 119570, 2306838, 5722902, 7295773, 5149469, 1733405, 3674914, 5976869, 1291046, 2880295, 3044133, 2872105, 1667881, 6419244, 3699501, 7140150, 1807161, 1733434, 2085706, 2634571, 4346701, 5952334, 2282320, 2437987, 1053539, 3707753, 1626985, 5092201, 7574381, 7574382, 7574383, 6886256, 7574385, 7574387, 7574388, 2462581, 7574390, 7574391, 7574392, 4707191, 3658619, 5493628, 5452668, 7574400, 4076419, 2978696, 940479, 1667979, 1094544, 2487185, 4453267, 3806103, 3650461, 5788578, 1979304, 1160104, 1463216, 447416, 4780988, 2257854, 2847679, 463809, 2978758, 17024143193031, 3101639, 865228, 4846540, 3773397, 3216342, 2896854, 1553365, 5067745, 1897442, 3429348, 6099941, 1840109, 2593776, 3412978, 545781, 2905077, 2200571, 1971197, 4428798, 6820863, 7271427, 2380804, 2438149, 3699720, 2159625, 1709079, 2429975, 1356823, 2692126, 2888737, 1700898, 5641251, 1446952, 3970089, 2798632, 1553455, 1528880, 1578036, 5493813, 3707957, 2479159, 4322359, 3486777, 5043256, 3650626, 7074890, 1840202, 734286, 7566415, 3380309, 5157983, 1209447, 5387368, 1553514, 3617908, 2716790, 3839094, 3912825, 1520763, 6255741, 4306045, 2454660, 1414281, 5043345, 2954389, 2954390, 6452374, 5166234, 6050971, 17609241760924, 3495072, 3691680, 1447073, 6149285, 3110056, 1766575, 3478705, 3486898, 136372, 1799351, 1971388, 3757248, 2094275, 2184388, 1651912, 7009481, 3503305, 2151630, 3036369, 2118873, 5813469, 3757278, 3478750, 5854437, 7288042, 3699951, 3413233, 2626804, 5534969, 2708731, 6837500, 7271680, 1643776, 2962689, 3568909, 1463576, 1545496, 3732761, 3298590, 3675423, 5231904, 5723425, 2667812, 7345446, 3675438, 4625712, 5395761, 1676593, 3806514, 3732788, 2053429, 2340145, 3724600, 1299778, 3904844, 3069262, 3913043, 1824086, 6714712, 4298073, 1602910, 5748062, 4068702, 5133665, 5474, 562530, 5510498, 1324386, 5182823, 1308009, 2266481, 3913081, 2962820, 1242503, 5436814, 1570197, 1815959, 3077528, 3175833, 1660312, 3626395, 1717664, 5895587, 349609, 2667948, 3233197, 1414583, 3569080, 2889144, 4273592, 2905532, 5805504, 2094529, 38286787, 2667977, 4576716, 3495373, 5404111, 6149586, 3388889, 2815451, 2733535, 1947104, 1684971, 2422252, 4797932, 2815472, 2094576, 4216313, 2479609, 112125, 3069439, 2479621, 2676236, 3757587, 2455062, 3896856, 1725977, 5813786, 521756, 2102814, 3872292, 2274853, 1889832, 914992, 1644081, 2422320, 1439286, 480826, 3413565, 1513031, 3716679, 3257930, 734801, 2250327, 4814426, 4060762, 554595, 1693284, 1980004, 3757673, 2889323, 5281388, 7100013, 3708532, 2913914, 3823226, 1529469, 530050, 2201219, 3896968, 562828, 3683984, 2479767, 1349271, 1201818, 562845, 3684002, 5559971, 1980068, 4241064, 1013418, 439982, 3880626, 2012857, 2807482, 3577533, 2643649, 7165647, 2840285, 2995936, 415457, 1816288, 2954979, 1414884, 1578727, 677608, 3741419, 2504433, 2479857, 2414326, 3593977, 1595131, 4372220, 1799933, 3946237, 5289725, 1742587, 3438340, 1791754, 6117137, 1537810, 1709842, 3217173, 6469397, 2676504, 2668317, 3118877, 997153, 816937, 6731562, 2864941, 6133550, 972593, 6649653, 1939255, 3921722, 2996042, 3110731, 3888975, 2152273, 2537299, 2824021, 5576533, 3749719, 6166360, 3659613, 2922338, 3241835, 2815852, 3643246, 4061041, 3143538, 857969, 1767282, 481141, 5838710, 1480565, 120696, 4380537, 5470076, 1881982, 2971518, 2922372, 2340745, 2111371, 1611663, 6428562, 2774931, 5707667, 1529753, 3979164, 1398686, 3831715, 4503459, 5642148, 3561381, 4986791, 1390504, 3889066, 3225517, 2521006, 522169, 3610554, 1415101, 808903, 5208010, 505805, 5814223, 3569617, 2578386, 2791383, 3520474, 5830619, 2840545, 2389991, 1611752, 5699567, 4675569, 2742266, 1783803, 7272444, 2299901, 6526973, 2668543, 3758080, 5683203, 2185227, 3643410, 4028439, 5265432, 7002137, 1800219, 1824797, 2177055, 3192865, 6461474, 1964070, 3790887, 5756977, 1808440, 2570299, 5568574, 3569727, 2816064, 1759304, 1357903, 3397714, 4159572, 1357913, 1595486, 6109280, 2037858, 7362662, 3192935, 1931371, 2455667, 3618931, 4298881, 1890436, 3029129, 2553999, 7108753, 1652907, 6912172, 2455731, 1202364, 4143293, 776388, 4675782, 2398407, 7116999, 3848392, 2169032, 1652941, 809165, 3184847, 1587408, 3487949, 2922706, 2586833, 2857172, 1603790, 2930905, 3684576, 2627810, 3537123, 6043877, 1923304, 3201256, 3651818, 3676395, 1620205, 596206, 7583983, 7583985, 6568183, 2472185, 243962, 1390843, 2398459, 7534845, 2971901, 2414847, 1931520, 1792257, 3029253, 2152725, 2857239, 3455263, 3324192, 2054433, 6068515, 1055018, 3545388, 5265717, 4200758, 4888891, 1112380, 1907014, 3422535, 2480456, 5552462, 1718606, 3176790, 235863, 2529630, 4864351, 1841509, 866665, 3676523, 3520878, 5568878, 2136431, 6158708, 2873717, 1677684, 293239, 3684726, 2488702, 4995458, 2865540, 1874309, 2767238, 2300295, 4225415, 1857925, 2267529, 3864964, 2873752, 5544344, 5544351, 7543202, 2415010, 2185637, 2013606, 3774885, 2242986, 2226606, 2464178, 2816435, 3520951, 1677751, 7584185, 7584186, 7584187, 2701754, 6830525, 7584189, 7584190, 4348352, 7584191, 7584192, 7584193, 7584194, 7584195, 7584197, 6937031, 7584198, 7584201, 7584202, 7051723, 7584204, 3733964, 1489352, 2324943, 1481171, 2431444, 2423265, 440803, 1464805, 2857448, 3267052, 1587693, 1636847, 3701233, 3111412, 5478906, 3824123, 6347261, 2046467, 1407496, 3357194, 5478924, 3652112, 3832344, 1391129, 293407, 3430946, 924199, 2251303, 1374761, 1382959, 7404080, 2153009, 1948214, 2849336, 1931832, 5593658, 1669694, 3029569, 3684931, 1055301, 6052422, 3660363, 4545101, 5167694, 5339729, 1915474, 2767444, 4217430, 2857562, 2808418, 3676771, 4069988, 3742309, 2071143, 1612392, 5438063, 1972853, 1661557, 4889205, 6945400, 2431609, 6027895, 3635836, 6453895, 3201680, 2218643, 400020, 5896853, 1997462, 1612436, 3668632, 5208730, 5896865, 768679, 4414133, 2931383, 268985, 6199995, 2702019, 432838, 957128, 2038475, 3685069, 3750609, 2415314, 7379672, 2005722, 5470939, 6380261, 5462759, 1661675, 5831412, 3545845, 1891070, 1997567, 3848961, 3742469, 5307145, 3685130, 2497300, 5413653, 5905174, 6028061, 2054943, 1694497, 3103524, 2972456, 1686313, 2439981, 5331758, 5667629, 523063, 1538872, 1284922, 2964283, 1555263, 916292, 5061445, 2014026, 1776462, 1416017, 3824465, 4848465, 3717973, 6191961, 7543645, 3521381, 3808106, 3586929, 1817461, 2530165, 3849085, 1891199, 7199616, 1604481, 4853506, 6101891, 3046275, 2481042, 1825683, 4807572, 3783573, 1375127, 1147674, 3357603, 3570595, 6847397, 5880743, 6536106, 7175099, 883644, 3799998, 531393, 2677697, 2571202, 3718084, 1989575, 3881931, 1973197, 4856787, 5086164, 6814675, 1588182, 3800025, 3144670, 3931104, 2112482, 3660773, 3185643, 3906543, 3783670, 6011897, 1031162, 809981, 3120127, 3988481, 2464770, 2956296, 1580042, 5200910, 4119570, 3480598, 3095578, 1965085, 4701213, 3800097, 1448994, 3693603, 1891368, 3775529, 2358318, 5692470, 1760310, 3415097, 3898426, 5069883, 1866817, 2088004, 2563142, 2874444, 3963989, 3685464, 408672, 2038888, 3841128, 3660915, 7576691, 7576693, 3693685, 7576695, 1399931, 3701884, 6036604, 3873919, 7576703, 6798468, 7576709, 7593093, 2784397, 728208, 5504146, 1883283, 2661522, 1703062, 1940633, 3595417, 5512348, 3988643, 2866340, 6593705, 2604202, 3931308, 1817776, 2317494, 2620598, 2972854, 3169468, 5225660, 687298, 2497733, 1449159, 4848841, 1875155, 6954201, 3046622, 5749982, 621792, 7560419, 3865829, 3063021, 2178289, 3742961, 5766391, 3570936, 1539324, 3497217, 253185, 3841284, 3964168, 6020360, 1170709, 4234518, 1752343, 6216983, 2833702, 2055462, 3022119, 1473836, 3579181, 1621292, 916783, 6733104, 212279, 2882873, 1826106, 1432892, 2866493, 1473876, 1580374, 7552342, 3636571, 6102366, 3603807, 6618462, 3702120, 5176687, 3661173, 1703288, 3734905, 1203580, 6184316, 2923902, 3079549, 1998209, 2760069, 7576967, 2825611, 5782928, 1383825, 3292563, 3464602, 3710363, 2334110, 5578142, 1424798, 1686942, 1785252, 3358124, 6872493, 5520818, 3153335, 5119425, 1465794, 1220037, 4160966, 2162120, 7445961, 5316041, 5561809, 6225379, 4644327, 2842087, 5086697, 2072042, 400875, 5840365, 1637869, 5324271, 1596918, 1220087, 3177975, 3718648, 3685884, 1203713, 5070340, 2924041, 3489293, 1334799, 1179152, 1580571, 1949215, 5086760, 2686505, 2915889, 3489333, 2719292, 237116, 4603458, 5160514, 3677765, 376396, 2440783, 1580625, 6766161, 1662547, 5881430, 5070428, 5463645, 2793053, 5635682, 2973285, 2621030, 1646186, 3587695, 3694198, 2031223, 5717626, 3350141, 3817089, 2006666, 4611726, 2883221, 1760924, 3350174, 7584196, 5086885, 7421606, 3702443, 2129581, 3604144, 1449651, 2211509, 2154166, 5865143, 2440885, 1654457, 3030719, 2326215, 2211530, 5512914, 2686675, 5611222, 1212123, 2129630, 573162, 3718893, 605936, 3915506, 7544571, 7126782, 220935, 1924872, 5160713, 5725959, 2801423, 2588439, 3743515, 4800287, 5758757, 4316966, 5521190, 4882220, 1654575, 2473784, 1621816, 1695546, 2449214, 5521222, 3628872, 5332812, 6201167, 1769303, 2604892, 3555164, 2695007, 2670433, 5521249, 2031462, 3121001, 393067, 1040236, 1900395, 3727215, 1867649, 6569858, 3694470, 7094153, 2916236, 1384334, 1392529, 3678098, 3219347, 1662866, 2277265, 786326, 2203543, 2514839, 5152657, 2981785, 5316507, 3014556, 3710878, 2416543, 1605542, 1916839, 556968, 1990566, 3669926, 4513718, 982968, 1990585, 6569917, 4366270, 556991, 319426, 3637190, 3866569, 2457551, 3522511, 3661778, 5537746, 6217685, 1310682, 3678170, 3743709, 6873059, 3186667, 5046251, 630767, 2629615, 3211247, 1646580}
wjMaps = {324428, 3788529, 6119572, 6119641, 6119642, 6119643, 6119655, 6120650, 6133176, 6146352, 6274154, 6313036, 6641061, 6641085, 7465241, 7485501, 7095618, 6799629, 6755943, 7627933, 7628267, 7628262, 7628264, 7627928, 7627934, 7627939, 7630265, 7630264, 7627957, 7627955, 7627953, 7628299, 7608227, 7608225, 7608215, 7601758, 6809280, 6809273, 6798504, 6798488, 6785385}
burlaMaps = {7675499, 7883712, 7883695, 7883694, 7883693, 7883692, 7883691, 7883689, 7883688, 7883687, 7883682, 7883683, 7883591, 7883590, 7883589, 7883588, 7883586, 7883585, 7883584, 7883581, 7675496, 7758193, 7678906, 7737478, 7660419, 7656608, 7708107, 7758185, 7735512, 7728488, 7727816, 7771218, 7686755, 7598929, 7677528, 7602085, 7602138, 7645917, 7662883, 7662883, 7664102, 7735507, 7873475, 7735912, 7677796, 7696114, 7876927, 7708136, 7677726, 7678879, 7737474, 7696708, 7656621, 7678689, 7656829, 7678883, 7737477, 7696054, 7664107, 7677688, 7737403, 7873277, 7873261, 7873336, 7708153, 7728649, 7708150, 7708122, 7728657, 7670636, 7629189, 7635563, 7615327, 7853770, 7638966, 7662912, 7798873, 7652017, 7652019, 7652033, 7652664, 7652667, 7652670, 7652679, 7652691, 7652790, 7652791, 7652792, 7652793, 7652796, 7652797, 7652798, 7652944, 7652958, 7652960, 7653108, 7653124, 7653127, 7653139, 7653142, 7653144, 7653149, 7426198, 7426611, 7387658, 7654229, 7203871, 7014223, 7175013, 7165042, 7154662, 6889690, 6933442, 7002430, 6884221, 6886514, 6882315, 6927305, 7659190, 7659197, 7659203, 7659205, 7659208, 7660110, 7660117, 7660104, 7660502, 7660704, 7660705, 7660706, 7660709, 7660710, 7660714, 7660716, 7660718, 7660721, 7660723, 7660727, 7661057, 7661060, 7661062, 7661067, 7661072, 7662547, 7662559, 7662562, 7662565, 7662566, 7662569, 7662759, 7662768, 7662777, 7662780, 7662796, 7663423, 7663428, 7883696, 7663430, 7663435, 7663437, 7663438, 7663444, 7663445, 7801474, 7801470, 7801467, 7801466, 7801465, 7801462, 7801461, 7801459, 7801452, 7801451, 7801449, 7801448, 7801447, 7801482, 7801478, 7801480, 7883698, 7801445, 7801444, 7801442, 7801441, 7801440, 7801439, 7801437, 7801436, 7801435, 7801435, 7801433, 7801430, 7801429, 7801427, 7801426, 7801425, 7801424, 7801423, 7801420, 7801419, 7801416, 7801399, 7801395, 7801394, 7801387, 7801847, 7801852, 7802248, 7802254, 7802255, 7802256, 7802257, 7802259, 7802260, 7802261, 7802262, 7802264, 7802265, 7802266, 7802267, 7802268, 7802269}

antiLeve = {457253, 6640740, 6640807, 6640857, 6641096, 6641104, 6641109, 6641134, 6641137, 6641138, 6641145, 6640737, 6640748, 6640758, 6640803, 6640808, 6640811, 6640816, 6640823, 6640833, 6640846, 6640852, 6640854, 6640858, 6640859, 6640860, 6640866, 6640869, 6640884, 6641058, 6641064, 6641067, 6641069, 6641077, 6641079, 6641088, 6641090, 6641101, 6641132, 6640881, 6641075, 6641087, 6641110, 6641111, 6641121, 6641144, 6641097, 6641115, 6641141, 6641143, 6640755, 6640828, 6640889, 6641063, 6641094, 6641108, 6641124, 6641128, 6641130, 6641139, 6641147, 6640760, 6640837, 6640851, 6641059, 6641062, 6641083}

-- Game map
-- 17cedee5d4a.png
-- 17cf3512544.png
old = "<C><P /><Z><S><S L='795' o='202020' H='56' X='400' Y='350' T='12' P='0,0,0.3,0.2,0,0,0,0'/><S L='10' o='202020' H='400' X='10' Y='200' T='12' P='0,0,0,0.2,0,0,0,0'/><S L='10' o='202020' H='400' X='785' Y='200' T='12' P='0,0,0,0.2,0,0,0,0'/><S L='795' o='202020' H='56' X='400' Y='425' T='12' P='0,0,0.3,0.2,0,0,0,0' i='-4,-398,17cf3512544.png'/></S><D /><O/></Z></C>"
proto = "<C><P /><Z><S><S X='400' P='0,0,0.3,0.2,0,0,0,0' L='795' o='202020' H='56' Y='350' T='12' /><S X='10' P='0,0,0,0.2,0,0,0,0' L='10' o='202020' H='400' Y='200' T='12' /><S X='785' P='0,0,0,0.2,0,0,0,0' L='10' o='202020' H='400' Y='200' T='12' /><S X='400' P='0,0,0.3,0.2,0,0,0,0' i='-4,-398,17cf3512544.png' L='795' o='202020' H='56' Y='425' T='12' /></S><D><P T='34' P='0,0' C='0' X='0' Y='-400' /><P Y='-800' P='0,0' C='0' X='0' T='34' /><P T='34' P='0,0' C='0' X='790' Y='0' /><P Y='-400' P='0,0' C='0' X='800' T='34' /><P Y='-800' P='0,0' C='0' X='800' T='34' /><P Y='-400' P='0,0' C='0' X='-800' T='34' /><P X='-800' P='0,0' C='0' Y='0' T='34' /><P T='34' P='0,0' C='0' X='-800' Y='800' /><P T='34' P='0,0' C='0' X='800' Y='400' /><P T='34' P='0,0' C='0' X='-800' Y='400' /></D><O /></Z></C>"

-- The main function
function main()
	setMapName()
	ui.setBackgroundColor("#202020")
	system.disableChatCommandDisplay(nil)
	for _,k in pairs({"AfkDeath", "DebugCommand", "AutoNewGame", "AutoShaman","AutoScore","AutoTimeLeft","PhysicalConsumables"}) do tfm.exec["disable"..k]() end
	startBoard()
	tfm.exec.newGame(proto)
end

-- The game loop
function eventLoop(elapsedTime, remainingTime)
	if remainingTime <= 500 and gameStarted then
		newMap()
	end
end

-- Checking for text area events
function eventTextAreaCallback(id, player, callback)
	-- Checks for the admin's callback
	if isAdmin(player) then
		if id == 1 then
			if callback == "teams" then
				mainModes = {teams = true, elimination = false, solo = false}
				startBoard()
			end
		elseif id == 2 then
			if callback == "start" then
				if #team1 > 0 or #team2 > 0 or #team3 > 0 or #team4 > 0 then
					for i=0, 2000,1 do if not contains(ignoredTexts, i) then ui.removeTextArea(i) else print(i) end end
					math.randomseed(os.time())
					resetScore()
					point1 = 0
					point2 = 0
					point3 = 0
					point4 = 0
					newMap()
					gameStarted = true
				end
			end
		elseif id == 999 then
			respawn = not respawn
			ui.addTextArea(999, "<p align='center'>Respawn: <a href='event:respawn'>"..(respawn and "<font color='#5ECE52'>on</font>" or not respawn and "<font color='#CE5252'>off</font>").."</a>", nil, 600, -25, 100, 20, 0x000000, 0xffff00, 0.6)
		elseif id == 998 then
			autoJoin = not autoJoin
			ui.addTextArea(998, "<p align='center'>AutoJoin: <a href='event:autojoin'>"..(autoJoin and "<font color='#5ECE52'>on</font>" or not autoJoin and "<font color='#CE5252'>off</font>").."</a>", nil, 485, -25, 100, 20, 0x000000, 0xffff00, 0.6)
		elseif id == 51 then
			if callback == "racing" then
				mode = "Racing"
				startMode(startTeams)
			end
		elseif id == 52 then
			if callback == "vanilla" then
				mode = "Vanilla"
				startMode(startTeams)
			end
		elseif id == 53 then
			if callback == "burlas" then
				mode = "Burlas"
				startMode(startTeams)
			end
		elseif id == 54 then
			if callback == "bootcamp" then
				mode = "Bootcamp"
				startMode(startTeams)
			end
		elseif id == 55 then
			if callback == "p1" then
				mode = "P1"
				startMode(startTeams)
			end
		elseif id == 56 then
			if callback == "mix" then
				mode = "Mix"
				startMode(startTeams)
			end
		elseif id == 1011 then
			if callback == "add" then addPlayerToTeam(team1)
			elseif callback == "remove" then table.remove(team1, #team1)
			end
			startBoard()
		elseif id == 1012 then
			if callback == "add" then addPlayerToTeam(team2)
			elseif callback == "remove" then table.remove(team2, #team2)
			end
			startBoard()
		elseif id == 1013 then
			if callback == "add" then addPlayerToTeam(team3)
			elseif callback == "remove" then table.remove(team3, #team3)
			end
			startBoard()
		elseif id == 1014 then
			if callback == "add" then addPlayerToTeam(team4)
			elseif callback == "remove" then table.remove(team4, #team4)
			end
			startBoard()

		elseif id == 1020 then
			if callback == "dec" then
				if tonumber(amountOfTeams) > 2 then
					amountOfTeams = amountOfTeams - 1
				end
			elseif callback == "inc" then
				if tonumber(amountOfTeams) < 4 then
					amountOfTeams = amountOfTeams + 1
				end
			end
			startBoard()
		elseif id == 1021 then
			if callback == "fill" then
				toTeams()
				startTeams()
				setPlayerNameColor()
			end
		elseif id == 1022 then
			if callback == "dec" then
				if tonumber(score) > 1 then
					score = score - 1
				end
			elseif callback == "inc" then
				if tonumber(score) < 999 then
					score = score + 1
				end
			end
			startTeams()
		end
	end

	-- Everyone can access this area
	if id == 997 then
		if callback == "info" then
			if contains(showInfoPlayers, player) then
				print(true)
				ui.removeTextArea(900, player)
				showInfoPlayers = removeItem(showInfoPlayers, player)
			else showInfo(player) print(false) end
		end
	end
end

-- Checking for chat comamnds
function eventChatCommand(name, command)
	local arg={}
	for argument in command:gmatch("[^%s]+") do
		table.insert(arg,argument)
	end
	if isAdmin(name) then
		if (arg[1] == "d" or arg[1] == "score" or arg[1] == "point" or arg[1] == "p") and tonumber(arg[2]) ~= nil then
			if tonumber(arg[2]) > 0 and tonumber(arg[2]) <= 999 then
				score = arg[2]
			if gameStarted == false then startTeams() else setMapName() end
			end
		elseif arg[1] == "s" or arg[1] == "skip" or arg[1] == "prox" then
			newMap()
		elseif arg[1] == "repeat" or arg[1] == "rt" then
			ui.removeTextArea(99)
			ui.removeTextArea(98)
			tfm.exec.newGame(tfm.get.room.currentMap)
		elseif (arg[1] == "add" or arg[1] == "a") and playerInGame(arg[3]) then
			if playerInTeam(arg[3]) then team1 = removeItem(team1, arg[3]) team2 = removeItem(team2, arg[3]) team3 = removeItem(team3, arg[3]) team4 = removeItem(team4, arg[3]) end
			if arg[2] == "t1" or arg[2] == "team1" then
				table.insert(team1, arg[3])
			elseif arg[2] == "t2" or arg[2] == "team2" then
				table.insert(team2, arg[3])
			elseif arg[2] == "t3" or arg[2] == "team3" then
				table.insert(team3, arg[3])
			elseif arg[2] == "t4" or arg[2] == "team4" then
				table.insert(team4, arg[3])
			end
			if not gameStarted then
				startBoard()
			end
		end
	end
end

-- Checking for the player that won
function eventPlayerWon(plr, TT, wonTime)
	if gameStarted then
		if playerInTeam(plr) then
			if not first then
				first = true
				tfm.exec.setPlayerScore(plr, 1,true)
				tfm.exec.setGameTime(5)
				playerWon(plr)
				setMapName()
			end
		end
	end
end

-- Checking for the player that died
function eventPlayerDied(plr)
	if gameStarted then
		local plrCount = 0
		for n,p in pairs(tfm.get.room.playerList) do
			if not p.isDead then
				plrCount = plrCount + 1
			end
		end

		if plrCount <= 0 and not respawn then
			newMap()
		elseif respawn then
			tfm.exec.respawnPlayer(plr)
			setPlayerNameColor()
		end
	end
end

-- Checking for a new player that join
function eventNewPlayer(player, y)
	for n,p in pairs(tfm.get.room.playerList) do
		ui.addTextArea(999, "<p align='center'>Respawn: <a href='event:respawn'>"..(respawn and "<font color='#5ECE52'>on</font>" or not respawn and "<font color='#CE5252'>off</font>").."</a>", player, 600, -25, 100, 20, 0x000000, 0xffff00, 0.6)
		ui.addTextArea(998, "<p align='center'>AutoJoin: <a href='event:autojoin'>"..(autoJoin and "<font color='#5ECE52'>on</font>" or not autoJoin and "<font color='#CE5252'>off</font>").."</a>", player, 485, -25, 100, 20, 0x000000, 0xffff00, 0.6)
		ui.addTextArea(997, "<p align='center'><i><b><font size='14'><a href='event:info'>i</a>", player, 30, -25, 20, 20, 0x000000, 0xeeff10, 0.5)
	end

	if gameStarted then
		if autoJoin then
			if #team1 < #team2 and #team1 < #team3 and #team1 < #team4 or #team1 == #team2 and #team1 == #team3 and #team1 == #team4 or #team2 > #team1 and #team2 > #team3 and #team2 > #team4 and #team1 == #team3 and #team1 == #team4 and #team3 == #team4 or #team2 > #team1 and #team2 > #team3 and #team3 > #team1 and #team2 > #team4 and #team1 == #team4 then table.insert(team1, player)
			elseif #team2 < #team1 and #team2 < #team3 and #team2 < #team4 or #team3 > #team1 and #team3 > #team2 and #team4 > #team1 and #team4 > #team2 and #team1 == #team2 or #team1 > #team2 and #team1 > #team4 and #team3 > #team2 and #team3 > #team4 and #team2 == #team4 or #team1 > #team2 and #team1 > #team3 and #team1 > #team4 and #team2 == #team3 and #team2 == #team4 and #team3 == #team4 then table.insert(team2, player) print("team2")
			elseif #team3 < #team1 and #team3 < #team2 and #team3 < #team4 or #team4 > #team1 and #team4 > #team2 and #team4 > #team3 and #team1 == #team2 and #team1 == #team3 and #team2 == #team3 or #team1 > #team2 and #team1 > #team3 and #team4 > #team2 and #team4 > #team3 and #team2 == #team3 or #team2 > #team1 and #team2 > #team3 and #team4 > #team1 and #team4 > #team3 and #team1 == #team3 then table.insert(team3, player) print("team3")
			elseif #team4 < #team1 and #team4 < #team2 and #team4 < #team3 or #team1 == #team2 and #team1 == #team3 and #team1 == #team4 and #team2 == #team3 and #team2 == #team4 and #team3 == #team4 or #team3 > #team1 and #team3 > #team2 and #team3 > #team4 and #team1 == #team2 and #team1 == #team4 and #team2 == #team4 or #team1 > #team3 and #team1 > #team4 and #team2 > #team3 and #team2 > #team4 and #team3 == #team4 then table.insert(team4, player)
			else table.insert(team4, player)
			end
		end
	elseif not gameStarted then
		tfm.exec.respawnPlayer(player)
		startBoard()
	end
end

-- Checking for a new map
function eventNewGame()
	if gameStarted then
		for n,p in pairs(tfm.get.room.playerList) do if not playerInTeam(n) and team then tfm.exec.killPlayer(n) end end
		ui.removeTextArea(98)
		ui.removeTextArea(99)
		ui.removeTextArea(100)
		for n,p in pairs(tfm.get.room.playerList) do if not playerInTeam(n) and team then tfm.exec.killPlayer(n) end end
		first = false
		setMapName()
		-- SetPlayerNameColor()
		setGameTime()
	end

	setPlayerNameColor()
	setMapName()
end

-- Showing the info about the lua
function showInfo(player)
	table.insert(showInfoPlayers, player)
	ui.addTextArea(900, "<p align='center'>"..infoText, player, 200, 50, 400, 250, 0x000000, 0xffffff, 0.8, false)
end

-- Starting a new map
function newMap()
	bcMaps = {"#3", "#13"}
	bootcampMap = bcMaps[math.random(#bcMaps)]
	burlasMap = burlaMaps[math.random(#burlaMaps)]
	p1Map = p1Maps[math.random(#p1Maps)]
	
	ui.removeTextArea(99)

	if mode == "Racing" then
		tfm.exec.newGame("#17")
	elseif mode == "Vanilla" then
		tfm.exec.newGame("#2")
	elseif mode == "Burlas" then
		tfm.exec.newGame(burlasMap)
	elseif mode == "Bootcamp" then
		tfm.exec.newGame(bootcampMap)
	elseif mode == "P1" then
		tfm.exec.newGame(p1Map)
	end
end

-- Starting any mode from a function
function startMode(func)
	for i=0,20 do ui.removeTextArea(i) end

	ui.addTextArea(2, "<p align='center'><font size='17'><b><a href='event:start'>Start</p>", nil, 350, 340, 100, 30, 0x000000, 0xffff00, 0.7, false)
	ui.addTextArea(3, "<p align='center'><font size='17'><b>"..getMainMode().." | "..mode.."</font></p>", nil, 300, 20, 200, 0, 0x000000, 0x000000)
	ui.addTextArea(51, "<p align='center'><font size='9.5'><b><a href='event:racing'>Racing</a>", nil, 805, 20, 75, 18, 0x000001, 0x000000, 0.8, false)
	ui.addTextArea(52, "<p align='center'><font size='9.5'><b><a href='event:vanilla'>Vanilla</a>", nil, 805, 48, 75, 18, 0x000001, 0x000000, 0.8, false)
	ui.addTextArea(53, "<p align='center'><font size='9.5'><b><a href='event:burlas'>Burlas</a>", nil, 805, 76, 75, 18, 0x000001, 0x000000, 0.8, false)
	ui.addTextArea(54, "<p align='center'><font size='9.5'><b><a href='event:bootcamp'>Bootcamp</a>", nil, 805, 104, 75, 18, 0x000001, 0x000000, 0.8, false)
	ui.addTextArea(55, "<p align='center'><font size='9.5'><b><a href='event:p1'>P1</a>", nil, 805, 130, 75, 18, 0x000001, 0x000000, 0.8, false)
	ui.addTextArea(56, "<p align='center'><font size='9.5'><b><a href='event:mix'>Mix</a>", nil, 805, 158, 75, 18, 0x000001, 0x000000, 0.8, false)
	ui.addTextArea(999, "<p align='center'>Respawn: <a href='event:respawn'>"..(respawn and "<font color='#5ECE52'>on</font>" or not respawn and "<font color='#CE5252'>off</font>").."</a>", nil, 600, -25, 100, 20, 0x000000, 0xffff00, 0.6)
	ui.addTextArea(998, "<p align='center'>AutoJoin: <a href='event:autojoin'>"..(autoJoin and "<font color='#5ECE52'>on</font>" or not autoJoin and "<font color='#CE5252'>off</font>").."</a>", nil, 485, -25, 100, 20, 0x000000, 0xffff00, 0.6)
	ui.addTextArea(997, "<p align='center'><i><b><font size='14'><a href='event:info'>i</a>", nil, 30, -25, 20, 20, 0x000000, 0xeeff10, 0.5)
	func()
end

-- Choosing the main mode of the game function
function chooseMainMode(name)
	ui.addTextArea(0, "<p align='center'><font size='13'>Choose the main mode of the game</font></p>", name, 275, 75, 250, 275, 0x000000, 0xffffff, 0.85, false)
	
	ui.addTextArea(1, "<p align='center'><font size='17'><a href='event:teams'>Teams</font></p>", name, 275, 125, 250, 275, 0x000000, 0x000000)
	ui.addTextArea(2, "<p align='center'><font size='17'><a href='event:elimination'>Elimination</font></p>", name, 275, 150, 250, 275, 0x000000, 0x000000)
	ui.addTextArea(3, "<p align='center'><font size='17'><a href='event:solo'>Solo</font></p>", name, 275, 175, 250, 275, 0x000000, 0x000000)

	ui.addTextArea(5, "<p align='center'><font size='13'>Note: You can change the main mode in game", name, 275, 300, 250, 275, 0x000000, 0x000000)

	ui.addTextArea(6, "<p align='center'><font size='15'><b>About\n--------------------</font></p>", name, 115, 115, 150, 200, 0x000000, 0xffffff, 0.85, false)
	ui.addTextArea(7, "<p align='center'><font size='12'><b>Made by: <font color='#ffff00'>Zeroo#7497</font>\n<font size='13'>--------------------</font>\nCredits:\nNone\n--------------------\nVersion: 0.4.1\nBETA Version</b></font></p>", name, 115, 150, 150, 200, 0x000000, 0x000000)

	for n,p in pairs(tfm.get.room.playerList) do
		if not isAdmin(n) then
			ui.addTextArea(10, "", n, 0, 0, 800, 400, 0x000001, 0x000001, 0.5, false)
			ui.addTextArea(11, "<p align='center'><font size='34'><b>Please wait while the admin chooses the main mode.</font></p>", n, 0, 150, 800, 400, 0x000000, 0x000000, 0, false)
		end
	end
end

-- Starting the teams mode function
function startTeams()
	if amountOfTeams == 2 then
		for i=1001,1019,1 do
			ui.removeTextArea(i)
		end

		ui.addTextArea(1001, "<p align='center'><font size='15' color='#ff0000'>\n"..getPlayersNL(team1), nil, 230, 50, 150, 275, 0x000001, 0xff0000, 0.7, false)
		ui.addTextArea(1002, "<p align='center'><font size='15' color='#36ffd7'>\n"..getPlayersNL(team2), nil, 420, 50, 150, 275, 0x000001, 0x36ffd7, 0.7, false)
		
		ui.addTextArea(1005, "<p align='center'><font size='12' color='#ff0000'><b>Team 1", nil, 230, 50, 150, 0, 0x000000, 0xff0000, 0.3)
		ui.addTextArea(1006, "<p align='center'><font size='12' color='#36ffd7'><b>Team 2", nil, 420, 50, 150, 0, 0x000000, 0x36ffd7, 0.3)

		ui.addTextArea(1011, "<p align='center'><font size='12' color='#ff0000'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 230, 310, 150, 0, 0x000000, 0xff0000, 0.5, false)
		ui.addTextArea(1012, "<p align='center'><font size='12' color='#36ffd7'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 420, 310, 150, 0, 0x000000, 0x36ffd7, 0.5, false)
	end

	if amountOfTeams >= 3 then
		for i=1001,1019,1 do
			ui.removeTextArea(i)
		end

		ui.addTextArea(1001, "<p align='center'><font size='15' color='#ff0000'>\n"..getPlayersNL(team1), nil, 325, 50, 150, 275, 0x000001, 0xff0000, 0.7, false)
		ui.addTextArea(1002, "<p align='center'><font size='15' color='#36ffd7'>\n"..getPlayersNL(team2), nil, 520, 50, 150, 275, 0x000001, 0x36ffd7, 0.7, false)
		ui.addTextArea(1003, "<p align='center'><font size='15' color='#ffff00'>\n"..getPlayersNL(team3), nil, 130, 50, 150, 275, 0x000001, 0xffff00, 0.7, false)
		
		ui.addTextArea(1005, "<p align='center'><font size='12' color='#ff0000'><b>Team 1", nil, 325, 50, 150, 0, 0x000000, 0xff0000, 0.3)
		ui.addTextArea(1006, "<p align='center'><font size='12' color='#36ffd7'><b>Team 2", nil, 520, 50, 150, 0, 0x000000, 0x36ffd7, 0.3)
		ui.addTextArea(1007, "<p align='center'><font size='12' color='#ffff00'><b>Team 3", nil, 130, 50, 150, 0, 0x000000, 0xffff00, 0.3)

		ui.addTextArea(1011, "<p align='center'><font size='12' color='#ff0000'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 325, 310, 150, 0, 0x000000, 0xff0000, 0.5, false)
		ui.addTextArea(1012, "<p align='center'><font size='12' color='#36ffd7'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 520, 310, 150, 0, 0x000000, 0x36ffd7, 0.5, false)
		ui.addTextArea(1013, "<p align='center'><font size='12' color='#ffff00'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 130, 310, 150, 0, 0x000000, 0xffff00, 0.5, false)

	end
	if amountOfTeams == 4 then
		for i=1001,1019,1 do
			ui.removeTextArea(i)
		end
		ui.addTextArea(1001, "<p align='center'><font size='15' color='#ff0000'>\n"..getPlayersNL(team1), nil, 230, 50, 150, 275, 0x000001, 0xff0000, 0.7, false)
		ui.addTextArea(1002, "<p align='center'><font size='15' color='#36ffd7'>\n"..getPlayersNL(team2), nil, 420, 50, 150, 275, 0x000001, 0x36ffd7, 0.7, false)
		
		ui.addTextArea(1005, "<p align='center'><font size='12' color='#ff0000'><b>Team 1", nil, 230, 50, 150, 0, 0x000000, 0xff0000, 0.3)
		ui.addTextArea(1006, "<p align='center'><font size='12' color='#36ffd7'><b>Team 2", nil, 420, 50, 150, 0, 0x000000, 0x36ffd7, 0.3)

		ui.addTextArea(1011, "<p align='center'><font size='12' color='#ff0000'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 230, 310, 150, 0, 0x000000, 0xff0000, 0.5, false)
		ui.addTextArea(1012, "<p align='center'><font size='12' color='#36ffd7'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 420, 310, 150, 0, 0x000000, 0x36ffd7, 0.5, false)

		ui.addTextArea(1003, "<p align='center'><font size='15' color='#ffff00'>\n"..getPlayersNL(team3), nil, 45, 50, 150, 275, 0x000001, 0xffff00, 0.7, false)
		ui.addTextArea(1007, "<p align='center'><font size='12' color='#ffff00'><b>Team 3", nil, 45, 50, 150, 0, 0x000000, 0xffff00, 0.3)
		ui.addTextArea(1013, "<p align='center'><font size='12' color='#ffff00'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 45, 310, 150, 0, 0x000000, 0xffff00, 0.5, false)

		ui.addTextArea(1004, "<p align='center'><font size='15' color='#ff20ff'>\n"..getPlayersNL(team4), nil, 605, 50, 150, 275, 0x000001, 0xff20ff, 0.7, false)
		ui.addTextArea(1008, "<p align='center'><font size='12' color='#ff20ff'><b>Team 4", nil, 605, 50, 150, 0, 0x000000, 0xff20ff, 0.3)
		ui.addTextArea(1014, "<p align='center'><font size='12' color='#ff20ff'><a href='event:add'>Add</a>        <a href='event:remove'>Remove</a>", nil, 605, 310, 150, 0, 0x000000, 0xff20ff, 0.5, false)
	end

	ui.addTextArea(1019, "", nil, 5, 340, 300, 100, 0x000000, 0xffffff, 0.6)
	ui.addTextArea(1020, "<p align='center'><font size='13'><b>Teams: <a href='event:dec'>-</a> "..amountOfTeams.." <a href='event:inc'>+</a>", nil, 10, 365, 0, 0, 0x000000, 0x000000)
	ui.addTextArea(1021, "<p align='center'><font size='13'><b><a href='event:fill'>Fill</a>", nil, 10, 340, 0, 0, 0x000000, 0x00000)
	ui.addTextArea(1022, "<p align='center'><font size='13'><b>Score: <a href='event:dec'>-</a> "..score.." <a href='event:inc'>+</a>", nil, 80, 340, 0, 0, 0x000000, 0x000000)
end

-- Starting the elimination mode function
function startElimination()
	
end

-- Starting the solo mode function
function startSolo()
	
end

-- Setting the game time
function setGameTime()
	if gameStarted then
		if mode == "Vanilla" then tfm.exec.setGameTime(110)
		elseif mode == "Racing" then tfm.exec.setGameTime(63)
		elseif mode == "P7" then tfm.exec.setGameTime(63)
		elseif mode == "Bootcamp" then tfm.exec.setGameTime(110)
		elseif mode == "Burlas" then tfm.exec.setGameTime(63)
		elseif mode == "WallJump" then tfm.exec.setGameTime(48)
		elseif mode == "RcDef" then tfm.exec.setGameTime(63)
		elseif mode == "P1" then tfm.exec.setGameTime(63)
		elseif mode == "MIX" then tfm.exec.setGameTime(110)
		end
	elseif not gameStarted then
		tfm.exec.setGameTime(99999)
	end
end

-- Setting the map name
function setMapName()
	local teamsName = "@"..mode.."	<font color='#ffffff'>Score: "..score.." | "

	if gameStarted then
		if amountOfTeams == 2 then
			tfm.exec.setUIMapName(teamsName.."<font color='#ff0000'>Team1: "..point1.."</font> | <font color='#36ffd7'>Team2: "..point2)
		elseif amountOfTeams == 3 then
			tfm.exec.setUIMapName(teamsName.."<font color='#ff0000'>Team1: "..point1.."</font> | <font color='#36ffd7'>Team2: "..point2.."</font> | <font color='#ffff00'>Team3: "..point3.."</font>")
		elseif amountOfTeams == 4 then
			tfm.exec.setUIMapName(teamsName.."<font color='#ff0000'>Team1: "..point1.."</font> | <font color='#36ffd7'>Team2: "..point2.."</font> | <font color='#ffff00'>Team3: "..point3.."</font> | <font color='#ff20ff'>Team4: "..point4.."</font>")
		end
	else
		tfm.exec.setUIMapName("<b>@Zeroo#7497		<font size='13' color='#ffffff'>NZ Lua</font> <font size='13' color='#21cc4e'>BETA</font> VERSION")
	end
end

-- Setting names color
function setPlayerNameColor()
	for i,v in pairs(tfm.get.room.playerList) do tfm.exec.setNameColor(i, "0xffffff") end

	for i,v in pairs(team1) do tfm.exec.setNameColor(v, "0xff0000") end
	for i,n in pairs(team2) do tfm.exec.setNameColor(n, "0x36ffd7") end
	for i,b in pairs(team3) do tfm.exec.setNameColor(b, "0xffff00") end
	for i,m in pairs(team4) do tfm.exec.setNameColor(m, "0xff20ff") end
end

-- Other functions
function isAdmin(name)
	local adm = false
	for i,v in pairs(admins) do
		if name == v then
			adm = true
		end
	end

	return adm
end

function returnAdmins()
	local adms = ""
	local amountOfAdmins = 0

	for admin in pairs(admins) do
		if playerInGame(admin) then amountOfAdmins = amountOfAdmins + 1 end
	end
	if amountOfAdmins < 2 then
		adms = admins[1]
	elseif amountOfAdmins >= 2 then
		for i,v in pairs(admins) do
			if admins[i] ~= admins[#admins] then
				adms = adms..v..", "
			else adms = adms..v
			end
		end
	end

	return adms
end

function contains(list, x)
	for i, v in pairs(list) do
		if v == x then return true end
	end
	return false
end

function playerWon(player)
	ui.addTextArea(100, "", nil, 5, 5, 790, 400, 0x000001, 0x000000, 0.3)
	if table.contain(team1, player) then
		ui.addTextArea(99, "<font size='35'><p align='center'><i><font color='#ff0000'> Team1 Scored!\nThanks to "..player.."</font>", nil, 0, 140, 800, 100, 0x000000, 0x000000, 0, true)
		point1 = point1 + 1
		if tonumber(point1) >= tonumber(score) then
			ui.removeTextArea(99)
			ui.addTextArea(97, "<font size='35'><p align='center'><i><font color='#ff0000'>Team1 won the game!", nil, 0, 140, 800, 60, 0x000000, 0x000000)
			ui.addTextArea(96, "<font size='15'><p align='center'><i><font color='#ff0000'>"..player.." made the last point!", nil, 0, 190, 800, 60, 0x000000, 0x000000)
			for i,n in pairs(team2) do tfm.exec.killPlayer(n) end
			for i,n in pairs(team3) do tfm.exec.killPlayer(n) end
			for i,n in pairs(team4) do tfm.exec.killPlayer(n) end
		end
	elseif table.contain(team2, player) then
		ui.addTextArea(99, "<font size='35'><p align='center'><i><font color='#36ffd7'> Team2 Scored!\nThanks to "..player.."</font>", nil, 0, 140, 800, 100, 0x000000, 0x000000, 0, true)
		point2 = point2 + 1
		if tonumber(point2) >= tonumber(score) then
			ui.removeTextArea(99)
			ui.addTextArea(97, "<font size='35'><p align='center'><i><font color='#36ffd7'>Team2 won the game!", nil, 0, 140, 800, 60, 0x000000, 0x000000)
			ui.addTextArea(96, "<font size='15'><p align='center'><i><font color='#36ffd7'>"..player.." made the last point!", nil, 0, 190, 800, 60, 0x000000, 0x000000)
			for i,n in pairs(team1) do tfm.exec.killPlayer(n) end
			for i,n in pairs(team3) do tfm.exec.killPlayer(n) end
			for i,n in pairs(team4) do tfm.exec.killPlayer(n) end
		end
	elseif table.contain(team3, player) then
		ui.addTextArea(99, "<font size='35'><p align='center'><i><font color='#ffff00'> Team3 Scored!\nThanks to "..player.."</font>", nil, 0, 140, 800, 100, 0x000000, 0x000000, 0, true)
		point3 = point3 + 1
		if tonumber(point3) >= tonumber(score) then
			ui.removeTextArea(99)
			ui.addTextArea(97, "<font size='35'><p align='center'><i><font color='#ffff00'>Team3 won the game!", nil, 0, 140, 800, 60, 0x000000, 0x000000)
			ui.addTextArea(96, "<font size='15'><p align='center'><i><font color='#ffff00'>"..player.." made the last point!", nil, 0, 190, 800, 60, 0x000000, 0x000000)
			for i,n in pairs(team2) do tfm.exec.killPlayer(n) end
			for i,n in pairs(team1) do tfm.exec.killPlayer(n) end
			for i,n in pairs(team4) do tfm.exec.killPlayer(n) end
		end
	elseif table.contain(team4, player) then
		ui.addTextArea(99, "<font size='35'><p align='center'><i><font color='#36ffd7'> Team4 Scored!\nThanks to "..player.."</font>", nil, 0, 140, 800, 100, 0x000000, 0x000000, 0, true)
		point4 = point4 + 1
		if tonumber(point4) >= tonumber(score) then
			ui.removeTextArea(99)
			ui.addTextArea(97, "<font size='35'><p align='center'><i><font color='#ff20ff'>Team4 won the game!", nil, 0, 140, 800, 60, 0x000000, 0x000000)
			ui.addTextArea(96, "<font size='15'><p align='center'><i><font color='#ff20ff'>"..player.." made the last point!", nil, 0, 190, 800, 60, 0x000000, 0x000000)
			for i,n in pairs(team2) do tfm.exec.killPlayer(n) end
			for i,n in pairs(team3) do tfm.exec.killPlayer(n) end
			for i,n in pairs(team1) do tfm.exec.killPlayer(n) end
		end
	end
end

function resetScore()
	for n,p in pairs(tfm.get.room.playerList) do
		tfm.exec.setPlayerScore(n, 0, false)
	end
end

function removeItem(tab, els)
	newtab = {}
	for i, v in pairs(tab) do
		if v ~= els then
			table.insert(newtab, v)
		end
	end

	tab = newtab
	return newtab
end

function getMainMode()
	if mainModes.teams then return "Teams"
	elseif mainModes.elimination then return "Elimination"
	elseif mainModes.solo then return "Solo"
	end
end

function getPlayersNL(list)
	local val = ""
	local tempList = limitList(list, 16)
	for i,v in pairs(tempList) do
		val = val..v.."\n"
	end

	return val
end

function playerInGame(player)
	for n,p in pairs(tfm.get.room.playerList) do
		if n == player or v == player then return true end
	end
	return false
end

function limitList(list, limit)
	local val = {}
	for i,v in pairs(list) do
		if i <= limit then
			table.insert(val, v)
		else break
		end
	end
	return val
end

function playerInTeam(plr)
	local player = plr
	for i,v in pairs(team1) do if v == player then return true end end
	for i,n in pairs(team2) do if n == player then return true end end
	if amountOfTeams == 3 then
		for i,b in pairs(team3) do if b == player then return true end end
	end
	if amountOfTeams == 4 then
		for i,m in pairs(team4) do if m == player then return true end end
	end
	return false
end

function toTeams()
	team1 = {}
	team2 = {}
	team3 = {}
	team4 = {}
	local equipo = 1
	local playersTotal = {}
	for name, p in pairs(tfm.get.room.playerList) do table.insert(playersTotal, name) end
	for i = 1, #playersTotal do
		numJugador = math.random(#playersTotal)
		addPlayer = playersTotal[numJugador]
		table.remove(playersTotal, numJugador)
		if amountOfTeams == 4 then
			if equipo == 1 then table.insert(team1, addPlayer) equipo = 2
			elseif equipo == 2 then table.insert(team2, addPlayer) equipo = 3
			elseif equipo == 3 then table.insert(team3, addPlayer) equipo = 4
			elseif equipo == 4 then table.insert(team4, addPlayer) equipo = 1
			end
		elseif amountOfTeams == 3 then
			if equipo == 1 then table.insert(team1, addPlayer) equipo = 2
			elseif equipo == 2 then table.insert(team2, addPlayer) equipo = 3
			elseif equipo == 3 then table.insert(team3, addPlayer) equipo = 1
			end
		elseif amountOfTeams == 2 then
			if equipo == 1 then table.insert(team1, addPlayer) equipo = 2
			elseif equipo == 2 then table.insert(team2, addPlayer) equipo = 1
			end
		end
	end
end

function addPlayerToTeam(team)
	local tm = team

	local playersTotal = {}
	for n, p in pairs(tfm.get.room.playerList) do if not checkPlayerInTeam(n) then table.insert(playersTotal, n) end end
	numPlayer = math.random(#playersTotal)
	addPlayer = playersTotal[numPlayer]

	removeItem(playersTotal, addPlayer)
	table.insert(team, addPlayer)
end

function checkPlayerInTeam(player)
	for i,v in pairs(team1) do if v == player then return true end end
	for i,v in pairs(team2) do if v == player then return true end end
	for i,v in pairs(team3) do if v == player then return true end end
	for i,v in pairs(team4) do if v == player then return true end end

	return false
end

function table.contain(t,obj)
	for i,v in pairs(t) do
		if v==obj then
			return true
		end
	end
	return false
end

-- Showing the start board function
function startBoard()
	infoText = "<font size='18'><b>INFO</b></font>\n<font size='12'>Admins:</font> <font size='10' color='#ffff00'>"..returnAdmins().."</font>"
	commandText = "<font size='16'><b>COMMANDS</b></font>\n!s, !skip, and !prox - Skips the current map to the next map.\n!rt, and !repeat - Repeat's the current map.\n!d, and !score - Sets the score to win the game."
	-- Teams
	if mainModes.teams then
		startMode(startTeams)
	-- Elimination
	elseif mainModes.elimination then
		startMode(startElimination)
	-- Solo
	elseif mainModes.solo then
		startMode(startSolo)
	-- Nothing
	else
		for i,v in pairs(admins) do
			chooseMainMode(v)
		end
	end
	setPlayerNameColor()
end

-- Starting the lua
main()
